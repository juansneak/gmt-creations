/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/dicom-parser";
exports.ids = ["vendor-chunks/dicom-parser"];
exports.modules = {

/***/ "(ssr)/./node_modules/dicom-parser/dist/dicomParser.min.js":
/*!***********************************************************!*\
  !*** ./node_modules/dicom-parser/dist/dicomParser.min.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*! dicom-parser - 1.8.12 - 2023-02-20 | (c) 2017 Chris Hafey | https://github.com/cornerstonejs/dicomParser */\n!function(e,t){ true?module.exports=t(__webpack_require__(/*! zlib */ \"zlib\")):0}(this,function(r){return a=[function(e,t){e.exports=r},function(e,t,s){\"use strict\";s.r(t),s.d(t,\"isStringVr\",function(){return d}),s.d(t,\"isPrivateTag\",function(){return f}),s.d(t,\"parsePN\",function(){return a}),s.d(t,\"parseTM\",function(){return n}),s.d(t,\"parseDA\",function(){return o}),s.d(t,\"explicitElementToString\",function(){return l}),s.d(t,\"explicitDataSetToJS\",function(){return u}),s.d(t,\"createJPEGBasicOffsetTable\",function(){return p}),s.d(t,\"parseDicomDataSetExplicit\",function(){return q}),s.d(t,\"parseDicomDataSetImplicit\",function(){return T}),s.d(t,\"readFixedString\",function(){return b}),s.d(t,\"alloc\",function(){return k}),s.d(t,\"version\",function(){return L}),s.d(t,\"bigEndianByteArrayParser\",function(){return N}),s.d(t,\"ByteStream\",function(){return J}),s.d(t,\"sharedCopy\",function(){return j}),s.d(t,\"DataSet\",function(){return w}),s.d(t,\"findAndSetUNElementLength\",function(){return y}),s.d(t,\"findEndOfEncapsulatedElement\",function(){return g}),s.d(t,\"findItemDelimitationItemAndSetElementLength\",function(){return x}),s.d(t,\"littleEndianByteArrayParser\",function(){return M}),s.d(t,\"parseDicom\",function(){return V}),s.d(t,\"readDicomElementExplicit\",function(){return B}),s.d(t,\"readDicomElementImplicit\",function(){return A}),s.d(t,\"readEncapsulatedImageFrame\",function(){return W}),s.d(t,\"readEncapsulatedPixelData\",function(){return K}),s.d(t,\"readEncapsulatedPixelDataFromFragments\",function(){return _}),s.d(t,\"readPart10Header\",function(){return G}),s.d(t,\"readSequenceItemsExplicit\",function(){return I}),s.d(t,\"readSequenceItemsImplicit\",function(){return F}),s.d(t,\"readSequenceItem\",function(){return S}),s.d(t,\"readTag\",function(){return h});var r={AE:!0,AS:!0,AT:!1,CS:!0,DA:!0,DS:!0,DT:!0,FL:!1,FD:!1,IS:!0,LO:!0,LT:!0,OB:!1,OD:!1,OF:!1,OW:!1,PN:!0,SH:!0,SL:!1,SQ:!1,SS:!1,ST:!0,TM:!0,UI:!0,UL:!1,UN:void 0,UR:!0,US:!1,UT:!0},d=function(e){return r[e]},f=function(e){e=parseInt(e[4],16);if(isNaN(e))throw\"dicomParser.isPrivateTag: cannot parse last character of group\";return e%2==1},a=function(e){if(void 0!==e){e=e.split(\"^\");return{familyName:e[0],givenName:e[1],middleName:e[2],prefix:e[3],suffix:e[4]}}};function n(e,t){if(2<=e.length){var r=parseInt(e.substring(0,2),10),a=4<=e.length?parseInt(e.substring(2,4),10):void 0,n=6<=e.length?parseInt(e.substring(4,6),10):void 0,i=8<=e.length?e.substring(7,13):void 0,i=i?parseInt(i,10)*Math.pow(10,6-i.length):void 0;if(t&&(isNaN(r)||void 0!==a&&isNaN(a)||void 0!==n&&isNaN(n)||void 0!==i&&isNaN(i)||r<0||23<r||a&&(a<0||59<a)||n&&(n<0||59<n)||i&&(i<0||999999<i)))throw\"invalid TM '\".concat(e,\"'\");return{hours:r,minutes:a,seconds:n,fractionalSeconds:i}}if(t)throw\"invalid TM '\".concat(e,\"'\")}function i(e,t,r){return!isNaN(r)&&(0<t&&t<=12&&0<e&&e<=function(e,t){switch(e){case 2:return t%4==0&&t%100||t%400==0?29:28;case 9:case 4:case 6:case 11:return 30;default:return 31}}(t,r))}function o(e,t){if(e&&8===e.length){var r=parseInt(e.substring(0,4),10),a=parseInt(e.substring(4,6),10),n=parseInt(e.substring(6,8),10);if(t&&!0!==i(n,a,r))throw\"invalid DA '\".concat(e,\"'\");return{year:r,month:a,day:n}}if(t)throw\"invalid DA '\".concat(e,\"'\")}function l(n,e){if(void 0===n||void 0===e)throw\"dicomParser.explicitElementToString: missing required parameters\";if(void 0===e.vr)throw\"dicomParser.explicitElementToString: cannot convert implicit element to string\";var t,r=e.vr,i=e.tag;function a(e,t){for(var r=\"\",a=0;a<e;a++)0!==a&&(r+=\"/\"),r+=t.call(n,i,a).toString();return r}if(!0===d(r))t=n.string(i);else{if(\"AT\"===r){var o=n.uint32(i);return void 0===o?void 0:\"x\".concat((o=o<0?4294967295+o+1:o).toString(16).toUpperCase())}\"US\"===r?t=a(e.length/2,n.uint16):\"SS\"===r?t=a(e.length/2,n.int16):\"UL\"===r?t=a(e.length/4,n.uint32):\"SL\"===r?t=a(e.length/4,n.int32):\"FD\"===r?t=a(e.length/8,n.double):\"FL\"===r&&(t=a(e.length/4,n.float))}return t}function u(e,t){if(void 0===e)throw\"dicomParser.explicitDataSetToJS: missing required parameter dataSet\";t=t||{omitPrivateAttibutes:!0,maxElementLength:128};var r,a={};for(r in e.elements){var n=e.elements[r];if(!0!==t.omitPrivateAttibutes||!f(r))if(n.items){for(var i=[],o=0;o<n.items.length;o++)i.push(u(n.items[o].dataSet,t));a[r]=i}else{var s=void 0;n.length<t.maxElementLength&&(s=l(e,n)),a[r]=void 0!==s?s:{dataOffset:n.dataOffset,length:n.length}}}return a}function c(e,t){return 255===e.byteArray[t]&&217===e.byteArray[t+1]}function m(e,t,r){for(var a,n,i=r;i<t.fragments.length;i++)if(a=e,n=i,n=t.fragments[n],!(!c(a,n.position+n.length-2)&&!c(a,n.position+n.length-3)))return i}function p(e,t,r){if(void 0===e)throw\"dicomParser.createJPEGBasicOffsetTable: missing required parameter dataSet\";if(void 0===t)throw\"dicomParser.createJPEGBasicOffsetTable: missing required parameter pixelDataElement\";if(\"x7fe00010\"!==t.tag)throw\"dicomParser.createJPEGBasicOffsetTable: parameter 'pixelDataElement' refers to non pixel data tag (expected tag = x7fe00010'\";if(!0!==t.encapsulatedPixelData)throw\"dicomParser.createJPEGBasicOffsetTable: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data\";if(!0!==t.hadUndefinedLength)throw\"dicomParser.createJPEGBasicOffsetTable: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data\";if(void 0===t.basicOffsetTable)throw\"dicomParser.createJPEGBasicOffsetTable: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data\";if(void 0===t.fragments)throw\"dicomParser.createJPEGBasicOffsetTable: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data\";if(t.fragments.length<=0)throw\"dicomParser.createJPEGBasicOffsetTable: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data\";if(r&&r.length<=0)throw\"dicomParser.createJPEGBasicOffsetTable: parameter 'fragments' must not be zero length\";r=r||t.fragments;for(var a=[],n=0;;){a.push(t.fragments[n].offset);var i=m(e,t,n);if(void 0===i||i===t.fragments.length-1)return a;n=i+1}}function h(e){if(void 0===e)throw\"dicomParser.readTag: missing required parameter 'byteStream'\";var t=256*e.readUint16()*256,e=e.readUint16();return\"x\".concat(\"00000000\".concat((t+e).toString(16)).substr(-8))}function g(e,t,r){if(void 0===e)throw\"dicomParser.findEndOfEncapsulatedElement: missing required parameter 'byteStream'\";if(void 0===t)throw\"dicomParser.findEndOfEncapsulatedElement: missing required parameter 'element'\";if(t.encapsulatedPixelData=!0,t.basicOffsetTable=[],t.fragments=[],\"xfffee000\"!==h(e))throw\"dicomParser.findEndOfEncapsulatedElement: basic offset table not found\";for(var a=e.readUint32()/4,n=0;n<a;n++){var i=e.readUint32();t.basicOffsetTable.push(i)}for(var o=e.position;e.position<e.byteArray.length;){var s=h(e),d=e.readUint32();if(\"xfffee0dd\"===s)return e.seek(d),void(t.length=e.position-t.dataOffset);if(\"xfffee000\"!==s)return r&&r.push(\"unexpected tag \".concat(s,\" while searching for end of pixel data element with undefined length\")),d>e.byteArray.length-e.position&&(d=e.byteArray.length-e.position),t.fragments.push({offset:e.position-o-8,position:e.position,length:d}),e.seek(d),void(t.length=e.position-t.dataOffset);t.fragments.push({offset:e.position-o-8,position:e.position,length:d}),e.seek(d)}r&&r.push(\"pixel data element \".concat(t.tag,\" missing sequence delimiter tag xfffee0dd\"))}function y(e,t){if(void 0===e)throw\"dicomParser.findAndSetUNElementLength: missing required parameter 'byteStream'\";for(var r=e.byteArray.length-8;e.position<=r;)if(65534===e.readUint16()){var a=e.readUint16();if(57565===a)return 0!==e.readUint32()&&e.warnings(\"encountered non zero length following item delimiter at position \".concat(e.position-4,\" while reading element of undefined length with tag \").concat(t.tag)),void(t.length=e.position-t.dataOffset)}t.length=e.byteArray.length-t.dataOffset,e.seek(e.byteArray.length-e.position)}function b(e,t,r){if(r<0)throw\"dicomParser.readFixedString - length cannot be less than 0\";if(t+r>e.length)throw\"dicomParser.readFixedString: attempt to read past end of buffer\";for(var a,n=\"\",i=0;i<r;i++){if(0===(a=e[t+i]))return t+=r,n;n+=String.fromCharCode(a)}return n}function v(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function P(e,t){return void 0!==e.parser?e.parser:t}var w=function(){function a(e,t,r){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,a),this.byteArrayParser=e,this.byteArray=t,this.elements=r}var e,t,r;return e=a,(t=[{key:\"uint16\",value:function(e,t){e=this.elements[e];if(t=void 0!==t?t:0,e&&0!==e.length)return P(e,this.byteArrayParser).readUint16(this.byteArray,e.dataOffset+2*t)}},{key:\"int16\",value:function(e,t){e=this.elements[e];if(t=void 0!==t?t:0,e&&0!==e.length)return P(e,this.byteArrayParser).readInt16(this.byteArray,e.dataOffset+2*t)}},{key:\"uint32\",value:function(e,t){e=this.elements[e];if(t=void 0!==t?t:0,e&&0!==e.length)return P(e,this.byteArrayParser).readUint32(this.byteArray,e.dataOffset+4*t)}},{key:\"int32\",value:function(e,t){e=this.elements[e];if(t=void 0!==t?t:0,e&&0!==e.length)return P(e,this.byteArrayParser).readInt32(this.byteArray,e.dataOffset+4*t)}},{key:\"float\",value:function(e,t){e=this.elements[e];if(t=void 0!==t?t:0,e&&0!==e.length)return P(e,this.byteArrayParser).readFloat(this.byteArray,e.dataOffset+4*t)}},{key:\"double\",value:function(e,t){e=this.elements[e];if(t=void 0!==t?t:0,e&&0!==e.length)return P(e,this.byteArrayParser).readDouble(this.byteArray,e.dataOffset+8*t)}},{key:\"numStringValues\",value:function(e){e=this.elements[e];if(e&&0<e.length){e=b(this.byteArray,e.dataOffset,e.length).match(/\\\\/g);return null===e?1:e.length+1}}},{key:\"string\",value:function(e,t){e=this.elements[e];if(e&&e.Value)return e.Value;if(e&&0<e.length){e=b(this.byteArray,e.dataOffset,e.length);return 0<=t?e.split(\"\\\\\")[t].trim():e.trim()}}},{key:\"text\",value:function(e,t){e=this.elements[e];if(e&&0<e.length){e=b(this.byteArray,e.dataOffset,e.length);return 0<=t?e.split(\"\\\\\")[t].replace(/ +$/,\"\"):e.replace(/ +$/,\"\")}}},{key:\"floatString\",value:function(e,t){var r=this.elements[e];if(r&&0<r.length){t=this.string(e,t=void 0!==t?t:0);if(void 0!==t)return parseFloat(t)}}},{key:\"intString\",value:function(e,t){var r=this.elements[e];if(r&&0<r.length){t=this.string(e,t=void 0!==t?t:0);if(void 0!==t)return parseInt(t)}}},{key:\"attributeTag\",value:function(e){var t=this.elements[e];if(t&&4===t.length){var r=P(t,this.byteArrayParser).readUint16,e=this.byteArray,t=t.dataOffset;return\"x\".concat(\"00000000\".concat((256*r(e,t)*256+r(e,t+2)).toString(16)).substr(-8))}}}])&&v(e.prototype,t),r&&v(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),a}();function x(e,t){if(void 0===e)throw\"dicomParser.readDicomElementImplicit: missing required parameter 'byteStream'\";for(var r=e.byteArray.length-8;e.position<=r;)if(65534===e.readUint16()){var a=e.readUint16();if(57357===a)return 0!==e.readUint32()&&e.warnings(\"encountered non zero length following item delimiter at position \".concat(e.position-4,\" while reading element of undefined length with tag \").concat(t.tag)),void(t.length=e.position-t.dataOffset)}t.length=e.byteArray.length-t.dataOffset,e.seek(e.byteArray.length-e.position)}var E=function(e,t){if(void 0!==e.vr)return\"SQ\"===e.vr;if(t.position+4<=t.byteArray.length){e=h(t);return t.seek(-4),\"xfffee000\"===e||\"xfffee0dd\"===e}return t.warnings.push(\"eof encountered before finding sequence item tag or sequence delimiter tag in peeking to determine VR\"),!1};function A(e,t,r){if(void 0===e)throw\"dicomParser.readDicomElementImplicit: missing required parameter 'byteStream'\";var a=h(e),a={tag:a,vr:void 0!==r?r(a):void 0,length:e.readUint32(),dataOffset:e.position};return 4294967295===a.length&&(a.hadUndefinedLength=!0),a.tag===t||(!E(a,e)||f(a.tag)&&!a.hadUndefinedLength?a.hadUndefinedLength?x(e,a):e.seek(a.length):(F(e,a,r),f(a.tag)&&(a.items=void 0))),a}function S(e){if(void 0===e)throw\"dicomParser.readSequenceItem: missing required parameter 'byteStream'\";var t={tag:h(e),length:e.readUint32(),dataOffset:e.position};if(\"xfffee000\"!==t.tag)throw\"dicomParser.readSequenceItem: item tag (FFFE,E000) not found at offset \".concat(e.position);return t}function D(e,t){var r=S(e);return 4294967295===r.length?(r.hadUndefinedLength=!0,r.dataSet=function(e,t){for(var r={};e.position<e.byteArray.length;){var a=A(e,void 0,t);if(\"xfffee00d\"===(r[a.tag]=a).tag)return new w(e.byteArrayParser,e.byteArray,r)}return e.warnings.push(\"eof encountered before finding sequence item delimiter in sequence item of undefined length\"),new w(e.byteArrayParser,e.byteArray,r)}(e,t),r.length=e.position-r.dataOffset):(r.dataSet=new w(e.byteArrayParser,e.byteArray,{}),T(r.dataSet,e,e.position+r.length,{vrCallback:t})),r}function F(e,t,r){if(void 0===e)throw\"dicomParser.readSequenceItemsImplicit: missing required parameter 'byteStream'\";if(void 0===t)throw\"dicomParser.readSequenceItemsImplicit: missing required parameter 'element'\";t.items=[],(4294967295===t.length?function(e,t,r){for(;e.position+4<=e.byteArray.length;){var a=h(e);if(e.seek(-4),\"xfffee0dd\"===a)return t.length=e.position-t.dataOffset,e.seek(8);a=D(e,r);t.items.push(a)}e.warnings.push(\"eof encountered before finding sequence delimiter in sequence of undefined length\"),t.length=e.byteArray.length-t.dataOffset}:function(e,t,r){for(var a=t.dataOffset+t.length;e.position<a;){var n=D(e,r);t.items.push(n)}})(e,t,r)}function O(e,t){var r=S(e);return 4294967295===r.length?(r.hadUndefinedLength=!0,r.dataSet=function(e,t){for(var r={};e.position<e.byteArray.length;){var a=B(e,t);if(\"xfffee00d\"===(r[a.tag]=a).tag)return new w(e.byteArrayParser,e.byteArray,r)}return t.push(\"eof encountered before finding item delimiter tag while reading sequence item of undefined length\"),new w(e.byteArrayParser,e.byteArray,r)}(e,t),r.length=e.position-r.dataOffset):(r.dataSet=new w(e.byteArrayParser,e.byteArray,{}),q(r.dataSet,e,e.position+r.length)),r}function I(e,t,r){if(void 0===e)throw\"dicomParser.readSequenceItemsExplicit: missing required parameter 'byteStream'\";if(void 0===t)throw\"dicomParser.readSequenceItemsExplicit: missing required parameter 'element'\";t.items=[],(4294967295===t.length?function(e,t,r){for(;e.position+4<=e.byteArray.length;){var a=h(e);if(e.seek(-4),\"xfffee0dd\"===a)return t.length=e.position-t.dataOffset,e.seek(8);a=O(e,r);t.items.push(a)}r.push(\"eof encountered before finding sequence delimitation tag while reading sequence of undefined length\"),t.length=e.position-t.dataOffset}:function(e,t,r){for(var a=t.dataOffset+t.length;e.position<a;){var n=O(e,r);t.items.push(n)}})(e,t,r)}var U=function(e){return\"OB\"===e||\"OD\"===e||\"OL\"===e||\"OW\"===e||\"SQ\"===e||\"OF\"===e||\"UC\"===e||\"UR\"===e||\"UT\"===e||\"UN\"===e?4:2};function B(e,t,r){if(void 0===e)throw\"dicomParser.readDicomElementExplicit: missing required parameter 'byteStream'\";var a={tag:h(e),vr:e.readFixedString(2)};return 2===U(a.vr)?a.length=e.readUint16():(e.seek(2),a.length=e.readUint32()),a.dataOffset=e.position,4294967295===a.length&&(a.hadUndefinedLength=!0),a.tag===r||(\"SQ\"===a.vr?I(e,a,t):4294967295===a.length?\"x7fe00010\"===a.tag?g(e,a,t):(\"UN\"===a.vr?F:x)(e,a):e.seek(a.length)),a}function q(e,t,r){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{};if(r=void 0===r?t.byteArray.length:r,void 0===t)throw\"dicomParser.parseDicomDataSetExplicit: missing required parameter 'byteStream'\";if(r<t.position||r>t.byteArray.length)throw\"dicomParser.parseDicomDataSetExplicit: invalid value for parameter 'maxP osition'\";for(var n=e.elements;t.position<r;){var i=B(t,e.warnings,a.untilTag);if((n[i.tag]=i).tag===a.untilTag)return}if(t.position>r)throw\"dicomParser:parseDicomDataSetExplicit: buffer overrun\"}function T(e,t,r){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{};if(r=void 0===r?e.byteArray.length:r,void 0===t)throw\"dicomParser.parseDicomDataSetImplicit: missing required parameter 'byteStream'\";if(r<t.position||r>t.byteArray.length)throw\"dicomParser.parseDicomDataSetImplicit: invalid value for parameter 'maxPosition'\";for(var n=e.elements;t.position<r;){var i=A(t,a.untilTag,a.vrCallback);if((n[i.tag]=i).tag===a.untilTag)return}}function k(e,t){if(\"undefined\"!=typeof Buffer&&e instanceof Buffer)return Buffer.alloc(t);if(e instanceof Uint8Array)return new Uint8Array(t);throw\"dicomParser.alloc: unknown type for byteArray\"}var L=\"1.8.12\",N={readUint16:function(e,t){if(t<0)throw\"bigEndianByteArrayParser.readUint16: position cannot be less than 0\";if(t+2>e.length)throw\"bigEndianByteArrayParser.readUint16: attempt to read past end of buffer\";return(e[t]<<8)+e[t+1]},readInt16:function(e,t){if(t<0)throw\"bigEndianByteArrayParser.readInt16: position cannot be less than 0\";if(t+2>e.length)throw\"bigEndianByteArrayParser.readInt16: attempt to read past end of buffer\";t=(e[t]<<8)+e[t+1];return t=32768&t?t-65535-1:t},readUint32:function(e,t){if(t<0)throw\"bigEndianByteArrayParser.readUint32: position cannot be less than 0\";if(t+4>e.length)throw\"bigEndianByteArrayParser.readUint32: attempt to read past end of buffer\";return 256*(256*(256*e[t]+e[t+1])+e[t+2])+e[t+3]},readInt32:function(e,t){if(t<0)throw\"bigEndianByteArrayParser.readInt32: position cannot be less than 0\";if(t+4>e.length)throw\"bigEndianByteArrayParser.readInt32: attempt to read past end of buffer\";return(e[t]<<24)+(e[t+1]<<16)+(e[t+2]<<8)+e[t+3]},readFloat:function(e,t){if(t<0)throw\"bigEndianByteArrayParser.readFloat: position cannot be less than 0\";if(t+4>e.length)throw\"bigEndianByteArrayParser.readFloat: attempt to read past end of buffer\";var r=new Uint8Array(4);return r[3]=e[t],r[2]=e[t+1],r[1]=e[t+2],r[0]=e[t+3],new Float32Array(r.buffer)[0]},readDouble:function(e,t){if(t<0)throw\"bigEndianByteArrayParser.readDouble: position cannot be less than 0\";if(t+8>e.length)throw\"bigEndianByteArrayParser.readDouble: attempt to read past end of buffer\";var r=new Uint8Array(8);return r[7]=e[t],r[6]=e[t+1],r[5]=e[t+2],r[4]=e[t+3],r[3]=e[t+4],r[2]=e[t+5],r[1]=e[t+6],r[0]=e[t+7],new Float64Array(r.buffer)[0]}};function j(e,t,r){if(\"undefined\"!=typeof Buffer&&e instanceof Buffer)return e.slice(t,t+r);if(e instanceof Uint8Array)return new Uint8Array(e.buffer,e.byteOffset+t,r);throw\"dicomParser.from: unknown type for byteArray\"}function C(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var J=function(){function a(e,t,r){if(!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,a),void 0===e)throw\"dicomParser.ByteStream: missing required parameter 'byteArrayParser'\";if(void 0===t)throw\"dicomParser.ByteStream: missing required parameter 'byteArray'\";if(t instanceof Uint8Array==!1&&(\"undefined\"==typeof Buffer||t instanceof Buffer==!1))throw\"dicomParser.ByteStream: parameter byteArray is not of type Uint8Array or Buffer\";if(r<0)throw\"dicomParser.ByteStream: parameter 'position' cannot be less than 0\";if(r>=t.length)throw\"dicomParser.ByteStream: parameter 'position' cannot be greater than or equal to 'byteArray' length\";this.byteArrayParser=e,this.byteArray=t,this.position=r||0,this.warnings=[]}var e,t,r;return e=a,(t=[{key:\"seek\",value:function(e){if(this.position+e<0)throw\"dicomParser.ByteStream.prototype.seek: cannot seek to position < 0\";this.position+=e}},{key:\"readByteStream\",value:function(e){if(this.position+e>this.byteArray.length)throw\"dicomParser.ByteStream.prototype.readByteStream: readByteStream - buffer overread\";var t=j(this.byteArray,this.position,e);return this.position+=e,new a(this.byteArrayParser,t)}},{key:\"getSize\",value:function(){return this.byteArray.length}},{key:\"readUint16\",value:function(){var e=this.byteArrayParser.readUint16(this.byteArray,this.position);return this.position+=2,e}},{key:\"readUint32\",value:function(){var e=this.byteArrayParser.readUint32(this.byteArray,this.position);return this.position+=4,e}},{key:\"readFixedString\",value:function(e){var t=b(this.byteArray,this.position,e);return this.position+=e,t}}])&&C(e.prototype,t),r&&C(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),a}(),M={readUint16:function(e,t){if(t<0)throw\"littleEndianByteArrayParser.readUint16: position cannot be less than 0\";if(t+2>e.length)throw\"littleEndianByteArrayParser.readUint16: attempt to read past end of buffer\";return e[t]+256*e[t+1]},readInt16:function(e,t){if(t<0)throw\"littleEndianByteArrayParser.readInt16: position cannot be less than 0\";if(t+2>e.length)throw\"littleEndianByteArrayParser.readInt16: attempt to read past end of buffer\";t=e[t]+(e[t+1]<<8);return t=32768&t?t-65535-1:t},readUint32:function(e,t){if(t<0)throw\"littleEndianByteArrayParser.readUint32: position cannot be less than 0\";if(t+4>e.length)throw\"littleEndianByteArrayParser.readUint32: attempt to read past end of buffer\";return e[t]+256*e[t+1]+256*e[t+2]*256+256*e[t+3]*256*256},readInt32:function(e,t){if(t<0)throw\"littleEndianByteArrayParser.readInt32: position cannot be less than 0\";if(t+4>e.length)throw\"littleEndianByteArrayParser.readInt32: attempt to read past end of buffer\";return e[t]+(e[t+1]<<8)+(e[t+2]<<16)+(e[t+3]<<24)},readFloat:function(e,t){if(t<0)throw\"littleEndianByteArrayParser.readFloat: position cannot be less than 0\";if(t+4>e.length)throw\"littleEndianByteArrayParser.readFloat: attempt to read past end of buffer\";var r=new Uint8Array(4);return r[0]=e[t],r[1]=e[t+1],r[2]=e[t+2],r[3]=e[t+3],new Float32Array(r.buffer)[0]},readDouble:function(e,t){if(t<0)throw\"littleEndianByteArrayParser.readDouble: position cannot be less than 0\";if(t+8>e.length)throw\"littleEndianByteArrayParser.readDouble: attempt to read past end of buffer\";var r=new Uint8Array(8);return r[0]=e[t],r[1]=e[t+1],r[2]=e[t+2],r[3]=e[t+3],r[4]=e[t+4],r[5]=e[t+5],r[6]=e[t+6],r[7]=e[t+7],new Float64Array(r.buffer)[0]}};function G(e){var i=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};if(void 0===e)throw\"dicomParser.readPart10Header: missing required parameter 'byteArray'\";var o=i.TransferSyntaxUID,s=new J(M,e);return function(){var e=function(){if(s.getSize()<=132&&o)return!1;if(s.seek(128),\"DICM\"===s.readFixedString(4))return!0;if(!(i||{}).TransferSyntaxUID)throw\"dicomParser.readPart10Header: DICM prefix not found at location 132 - this is not a valid DICOM P10 file.\";return s.seek(0),!1}(),t=[],r={};if(!e)return s.position=0,{elements:{x00020010:{tag:\"x00020010\",vr:\"UI\",Value:o}},warnings:t};for(;s.position<s.byteArray.length;){var a=s.position,n=B(s,t);if(\"x0002ffff\"<n.tag){s.position=a;break}n.parser=M,r[n.tag]=n}return(e=new w(s.byteArrayParser,s.byteArray,r)).warnings=s.warnings,e.position=s.position,e}()}var z=\"1.2.840.10008.1.2.2\";function V(i){var o=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};if(void 0===i)throw new Error(\"dicomParser.parseDicom: missing required parameter 'byteArray'\");var e,a=function(e){if(void 0===e.elements.x00020010)throw new Error(\"dicomParser.parseDicom: missing required meta header attribute 0002,0010\");e=e.elements.x00020010;return e&&e.Value||b(i,e.dataOffset,e.length)};function t(t){var e=a(t),r=\"1.2.840.10008.1.2\"!==e,e=function(e,t){var r=\"[object process]\"===Object.prototype.toString.call(\"undefined\"!=typeof process?process:0);if(\"1.2.840.10008.1.2.1.99\"!==e)return new J(e===z?N:M,i,t);if(o&&o.inflater){e=o.inflater(i,t);return new J(M,e,0)}if(!0==r){var a=s(0),n=j(i,t,i.length-t),a=a.inflateRawSync(n),n=k(i,a.length+t);return i.copy(n,0,0,t),a.copy(n,t),new J(M,n,0)}if(\"undefined\"==typeof pako)throw\"dicomParser.parseDicom: no inflater available to handle deflate transfer syntax\";return a=i.slice(t),n=pako.inflateRaw(a),(a=k(i,n.length+t)).set(i.slice(0,t),0),a.set(n,t),new J(M,a,0)}(e,t.position),t=new w(e.byteArrayParser,e.byteArray,{});t.warnings=e.warnings;try{(r?q:T)(t,e,e.byteArray.length,o)}catch(e){throw{exception:e,dataSet:t}}return t}return function(e,t){for(var r in e.elements)e.elements.hasOwnProperty(r)&&(t.elements[r]=e.elements[r]);return void 0!==e.warnings&&(t.warnings=e.warnings.concat(t.warnings)),t}(e=G(i,o),t(e))}var R=function(e,t,r){for(var a=0,n=t;n<t+r;n++)a+=e[n].length;return a};function _(e,t,r,a,n){if(n=n||t.fragments,void 0===e)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: missing required parameter 'dataSet'\";if(void 0===t)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: missing required parameter 'pixelDataElement'\";if(void 0===r)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: missing required parameter 'startFragmentIndex'\";if(void 0===(a=a||1))throw\"dicomParser.readEncapsulatedPixelDataFromFragments: missing required parameter 'numFragments'\";if(\"x7fe00010\"!==t.tag)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'pixelDataElement' refers to non pixel data tag (expected tag = x7fe00010\";if(!0!==t.encapsulatedPixelData)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data\";if(!0!==t.hadUndefinedLength)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data\";if(void 0===t.basicOffsetTable)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data\";if(void 0===t.fragments)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data\";if(t.fragments.length<=0)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data\";if(r<0)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'startFragmentIndex' must be >= 0\";if(r>=t.fragments.length)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'startFragmentIndex' must be < number of fragments\";if(a<1)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'numFragments' must be > 0\";if(r+a>t.fragments.length)throw\"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'startFragment' + 'numFragments' < number of fragments\";var i=new J(e.byteArrayParser,e.byteArray,t.dataOffset),t=S(i);if(\"xfffee000\"!==t.tag)throw\"dicomParser.readEncapsulatedPixelData: missing basic offset table xfffee000\";i.seek(t.length);var o=i.position;if(1===a)return j(i.byteArray,o+n[r].offset+8,n[r].length);for(var t=R(n,r,a),s=k(i.byteArray,t),d=0,f=r;f<r+a;f++)for(var l=o+n[f].offset+8,u=0;u<n[f].length;u++)s[d++]=i.byteArray[l++];return s}var H=function(e,t){for(var r=0;r<e.length;r++)if(e[r].offset===t)return r},Q=function(e,t,r,a){if(e===t.length-1)return r.length-a;for(var n=t[e+1],i=a+1;i<r.length;i++)if(r[i].offset===n)return i-a;throw\"dicomParser.calculateNumberOfFragmentsForFrame: could not find fragment with offset matching basic offset table\"};function W(e,t,r,a,n){if(a=a||t.basicOffsetTable,n=n||t.fragments,void 0===e)throw\"dicomParser.readEncapsulatedImageFrame: missing required parameter 'dataSet'\";if(void 0===t)throw\"dicomParser.readEncapsulatedImageFrame: missing required parameter 'pixelDataElement'\";if(void 0===r)throw\"dicomParser.readEncapsulatedImageFrame: missing required parameter 'frameIndex'\";if(void 0===a)throw\"dicomParser.readEncapsulatedImageFrame: parameter 'pixelDataElement' does not have basicOffsetTable\";if(\"x7fe00010\"!==t.tag)throw\"dicomParser.readEncapsulatedImageFrame: parameter 'pixelDataElement' refers to non pixel data tag (expected tag = x7fe00010)\";if(!0!==t.encapsulatedPixelData)throw\"dicomParser.readEncapsulatedImageFrame: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data\";if(!0!==t.hadUndefinedLength)throw\"dicomParser.readEncapsulatedImageFrame: parameter 'pixelDataElement' refers to pixel data element that does not have undefined length\";if(void 0===t.fragments)throw\"dicomParser.readEncapsulatedImageFrame: parameter 'pixelDataElement' refers to pixel data element that does not have fragments\";if(0===a.length)throw\"dicomParser.readEncapsulatedImageFrame: basicOffsetTable has zero entries\";if(r<0)throw\"dicomParser.readEncapsulatedImageFrame: parameter 'frameIndex' must be >= 0\";if(r>=a.length)throw\"dicomParser.readEncapsulatedImageFrame: parameter 'frameIndex' must be < basicOffsetTable.length\";var i=a[r],i=H(n,i);if(void 0===i)throw\"dicomParser.readEncapsulatedImageFrame: unable to find fragment that matches basic offset table entry\";return _(e,t,i,Q(r,a,n,i),n)}var $=!1;function K(e,t,r){if($||($=!0,console&&console.log&&console.log(\"WARNING: dicomParser.readEncapsulatedPixelData() has been deprecated\")),void 0===e)throw\"dicomParser.readEncapsulatedPixelData: missing required parameter 'dataSet'\";if(void 0===t)throw\"dicomParser.readEncapsulatedPixelData: missing required parameter 'element'\";if(void 0===r)throw\"dicomParser.readEncapsulatedPixelData: missing required parameter 'frame'\";if(\"x7fe00010\"!==t.tag)throw\"dicomParser.readEncapsulatedPixelData: parameter 'element' refers to non pixel data tag (expected tag = x7fe00010)\";if(!0!==t.encapsulatedPixelData)throw\"dicomParser.readEncapsulatedPixelData: parameter 'element' refers to pixel data element that does not have encapsulated pixel data\";if(!0!==t.hadUndefinedLength)throw\"dicomParser.readEncapsulatedPixelData: parameter 'element' refers to pixel data element that does not have encapsulated pixel data\";if(void 0===t.basicOffsetTable)throw\"dicomParser.readEncapsulatedPixelData: parameter 'element' refers to pixel data element that does not have encapsulated pixel data\";if(void 0===t.fragments)throw\"dicomParser.readEncapsulatedPixelData: parameter 'element' refers to pixel data element that does not have encapsulated pixel data\";if(r<0)throw\"dicomParser.readEncapsulatedPixelData: parameter 'frame' must be >= 0\";return 0!==t.basicOffsetTable.length?W(e,t,r):_(e,t,0,t.fragments.length)}t.default={isStringVr:d,isPrivateTag:f,parsePN:a,parseTM:n,parseDA:o,explicitElementToString:l,explicitDataSetToJS:u,createJPEGBasicOffsetTable:p,parseDicomDataSetExplicit:q,parseDicomDataSetImplicit:T,readFixedString:b,alloc:k,version:L,bigEndianByteArrayParser:N,ByteStream:J,sharedCopy:j,DataSet:w,findAndSetUNElementLength:y,findEndOfEncapsulatedElement:g,findItemDelimitationItemAndSetElementLength:x,littleEndianByteArrayParser:M,parseDicom:V,readDicomElementExplicit:B,readDicomElementImplicit:A,readEncapsulatedImageFrame:W,readEncapsulatedPixelData:K,readEncapsulatedPixelDataFromFragments:_,readPart10Header:G,readSequenceItemsExplicit:I,readSequenceItemsImplicit:F,readSequenceItem:S,readTag:h,LEI:\"1.2.840.10008.1.2\",LEE:\"1.2.840.10008.1.2.1\"}}],i={},n.m=a,n.c=i,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var a in t)n.d(r,a,function(e){return t[e]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=1);function n(e){if(i[e])return i[e].exports;var t=i[e]={i:e,l:!1,exports:{}};return a[e].call(t.exports,t,t.exports,n),t.l=!0,t.exports}var a,i});\n//# sourceMappingURL=dicomParser.min.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZGljb20tcGFyc2VyL2Rpc3QvZGljb21QYXJzZXIubWluLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsZUFBZSxLQUFpRCxrQkFBa0IsbUJBQU8sQ0FBQyxrQkFBTSxHQUFHLENBQW1LLENBQUMsa0JBQWtCLHdCQUF3QixZQUFZLGlCQUFpQixhQUFhLHFDQUFxQyxTQUFTLGtDQUFrQyxTQUFTLDZCQUE2QixTQUFTLDZCQUE2QixTQUFTLDZCQUE2QixTQUFTLDZDQUE2QyxTQUFTLHlDQUF5QyxTQUFTLGdEQUFnRCxTQUFTLCtDQUErQyxTQUFTLCtDQUErQyxTQUFTLHFDQUFxQyxTQUFTLDJCQUEyQixTQUFTLDZCQUE2QixTQUFTLDhDQUE4QyxTQUFTLGdDQUFnQyxTQUFTLGdDQUFnQyxTQUFTLDZCQUE2QixTQUFTLCtDQUErQyxTQUFTLGtEQUFrRCxTQUFTLGlFQUFpRSxTQUFTLGlEQUFpRCxTQUFTLGdDQUFnQyxTQUFTLDhDQUE4QyxTQUFTLDhDQUE4QyxTQUFTLGdEQUFnRCxTQUFTLCtDQUErQyxTQUFTLDREQUE0RCxTQUFTLHNDQUFzQyxTQUFTLCtDQUErQyxTQUFTLCtDQUErQyxTQUFTLHNDQUFzQyxTQUFTLDZCQUE2QixTQUFTLEVBQUUsT0FBTyxrTEFBa0wsZUFBZSxZQUFZLGVBQWUsb0JBQW9CLGtGQUFrRixjQUFjLGVBQWUsZUFBZSxlQUFlLE9BQU8sMEVBQTBFLGdCQUFnQixnQkFBZ0IsbU9BQW1PLG9MQUFvTCxPQUFPLGlEQUFpRCx1Q0FBdUMsa0JBQWtCLG9EQUFvRCxVQUFVLDRDQUE0Qyx1Q0FBdUMsbUJBQW1CLE9BQU8sZ0JBQWdCLG9CQUFvQixvR0FBb0csc0RBQXNELE9BQU8sc0JBQXNCLHVDQUF1QyxnQkFBZ0Isa0dBQWtHLHVHQUF1RyxxQkFBcUIsZ0JBQWdCLGlCQUFpQixJQUFJLGdEQUFnRCxTQUFTLDJCQUEyQixLQUFLLGFBQWEsa0JBQWtCLHlGQUF5Riw0TUFBNE0sU0FBUyxnQkFBZ0IseUZBQXlG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YWN0LWJhc2ljLWNydWQvLi9ub2RlX21vZHVsZXMvZGljb20tcGFyc2VyL2Rpc3QvZGljb21QYXJzZXIubWluLmpzP2Q4ZDciXSwic291cmNlc0NvbnRlbnQiOlsiLyohIGRpY29tLXBhcnNlciAtIDEuOC4xMiAtIDIwMjMtMDItMjAgfCAoYykgMjAxNyBDaHJpcyBIYWZleSB8IGh0dHBzOi8vZ2l0aHViLmNvbS9jb3JuZXJzdG9uZWpzL2RpY29tUGFyc2VyICovXG4hZnVuY3Rpb24oZSx0KXtcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJvYmplY3RcIj09dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz10KHJlcXVpcmUoXCJ6bGliXCIpKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFwiZGljb20tcGFyc2VyXCIsW1wiemxpYlwiXSx0KTpcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cz9leHBvcnRzW1wiZGljb20tcGFyc2VyXCJdPXQocmVxdWlyZShcInpsaWJcIikpOmUuZGljb21QYXJzZXI9dChlLnpsaWIpfSh0aGlzLGZ1bmN0aW9uKHIpe3JldHVybiBhPVtmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1yfSxmdW5jdGlvbihlLHQscyl7XCJ1c2Ugc3RyaWN0XCI7cy5yKHQpLHMuZCh0LFwiaXNTdHJpbmdWclwiLGZ1bmN0aW9uKCl7cmV0dXJuIGR9KSxzLmQodCxcImlzUHJpdmF0ZVRhZ1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGZ9KSxzLmQodCxcInBhcnNlUE5cIixmdW5jdGlvbigpe3JldHVybiBhfSkscy5kKHQsXCJwYXJzZVRNXCIsZnVuY3Rpb24oKXtyZXR1cm4gbn0pLHMuZCh0LFwicGFyc2VEQVwiLGZ1bmN0aW9uKCl7cmV0dXJuIG99KSxzLmQodCxcImV4cGxpY2l0RWxlbWVudFRvU3RyaW5nXCIsZnVuY3Rpb24oKXtyZXR1cm4gbH0pLHMuZCh0LFwiZXhwbGljaXREYXRhU2V0VG9KU1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHV9KSxzLmQodCxcImNyZWF0ZUpQRUdCYXNpY09mZnNldFRhYmxlXCIsZnVuY3Rpb24oKXtyZXR1cm4gcH0pLHMuZCh0LFwicGFyc2VEaWNvbURhdGFTZXRFeHBsaWNpdFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHF9KSxzLmQodCxcInBhcnNlRGljb21EYXRhU2V0SW1wbGljaXRcIixmdW5jdGlvbigpe3JldHVybiBUfSkscy5kKHQsXCJyZWFkRml4ZWRTdHJpbmdcIixmdW5jdGlvbigpe3JldHVybiBifSkscy5kKHQsXCJhbGxvY1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGt9KSxzLmQodCxcInZlcnNpb25cIixmdW5jdGlvbigpe3JldHVybiBMfSkscy5kKHQsXCJiaWdFbmRpYW5CeXRlQXJyYXlQYXJzZXJcIixmdW5jdGlvbigpe3JldHVybiBOfSkscy5kKHQsXCJCeXRlU3RyZWFtXCIsZnVuY3Rpb24oKXtyZXR1cm4gSn0pLHMuZCh0LFwic2hhcmVkQ29weVwiLGZ1bmN0aW9uKCl7cmV0dXJuIGp9KSxzLmQodCxcIkRhdGFTZXRcIixmdW5jdGlvbigpe3JldHVybiB3fSkscy5kKHQsXCJmaW5kQW5kU2V0VU5FbGVtZW50TGVuZ3RoXCIsZnVuY3Rpb24oKXtyZXR1cm4geX0pLHMuZCh0LFwiZmluZEVuZE9mRW5jYXBzdWxhdGVkRWxlbWVudFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGd9KSxzLmQodCxcImZpbmRJdGVtRGVsaW1pdGF0aW9uSXRlbUFuZFNldEVsZW1lbnRMZW5ndGhcIixmdW5jdGlvbigpe3JldHVybiB4fSkscy5kKHQsXCJsaXR0bGVFbmRpYW5CeXRlQXJyYXlQYXJzZXJcIixmdW5jdGlvbigpe3JldHVybiBNfSkscy5kKHQsXCJwYXJzZURpY29tXCIsZnVuY3Rpb24oKXtyZXR1cm4gVn0pLHMuZCh0LFwicmVhZERpY29tRWxlbWVudEV4cGxpY2l0XCIsZnVuY3Rpb24oKXtyZXR1cm4gQn0pLHMuZCh0LFwicmVhZERpY29tRWxlbWVudEltcGxpY2l0XCIsZnVuY3Rpb24oKXtyZXR1cm4gQX0pLHMuZCh0LFwicmVhZEVuY2Fwc3VsYXRlZEltYWdlRnJhbWVcIixmdW5jdGlvbigpe3JldHVybiBXfSkscy5kKHQsXCJyZWFkRW5jYXBzdWxhdGVkUGl4ZWxEYXRhXCIsZnVuY3Rpb24oKXtyZXR1cm4gS30pLHMuZCh0LFwicmVhZEVuY2Fwc3VsYXRlZFBpeGVsRGF0YUZyb21GcmFnbWVudHNcIixmdW5jdGlvbigpe3JldHVybiBffSkscy5kKHQsXCJyZWFkUGFydDEwSGVhZGVyXCIsZnVuY3Rpb24oKXtyZXR1cm4gR30pLHMuZCh0LFwicmVhZFNlcXVlbmNlSXRlbXNFeHBsaWNpdFwiLGZ1bmN0aW9uKCl7cmV0dXJuIEl9KSxzLmQodCxcInJlYWRTZXF1ZW5jZUl0ZW1zSW1wbGljaXRcIixmdW5jdGlvbigpe3JldHVybiBGfSkscy5kKHQsXCJyZWFkU2VxdWVuY2VJdGVtXCIsZnVuY3Rpb24oKXtyZXR1cm4gU30pLHMuZCh0LFwicmVhZFRhZ1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGh9KTt2YXIgcj17QUU6ITAsQVM6ITAsQVQ6ITEsQ1M6ITAsREE6ITAsRFM6ITAsRFQ6ITAsRkw6ITEsRkQ6ITEsSVM6ITAsTE86ITAsTFQ6ITAsT0I6ITEsT0Q6ITEsT0Y6ITEsT1c6ITEsUE46ITAsU0g6ITAsU0w6ITEsU1E6ITEsU1M6ITEsU1Q6ITAsVE06ITAsVUk6ITAsVUw6ITEsVU46dm9pZCAwLFVSOiEwLFVTOiExLFVUOiEwfSxkPWZ1bmN0aW9uKGUpe3JldHVybiByW2VdfSxmPWZ1bmN0aW9uKGUpe2U9cGFyc2VJbnQoZVs0XSwxNik7aWYoaXNOYU4oZSkpdGhyb3dcImRpY29tUGFyc2VyLmlzUHJpdmF0ZVRhZzogY2Fubm90IHBhcnNlIGxhc3QgY2hhcmFjdGVyIG9mIGdyb3VwXCI7cmV0dXJuIGUlMj09MX0sYT1mdW5jdGlvbihlKXtpZih2b2lkIDAhPT1lKXtlPWUuc3BsaXQoXCJeXCIpO3JldHVybntmYW1pbHlOYW1lOmVbMF0sZ2l2ZW5OYW1lOmVbMV0sbWlkZGxlTmFtZTplWzJdLHByZWZpeDplWzNdLHN1ZmZpeDplWzRdfX19O2Z1bmN0aW9uIG4oZSx0KXtpZigyPD1lLmxlbmd0aCl7dmFyIHI9cGFyc2VJbnQoZS5zdWJzdHJpbmcoMCwyKSwxMCksYT00PD1lLmxlbmd0aD9wYXJzZUludChlLnN1YnN0cmluZygyLDQpLDEwKTp2b2lkIDAsbj02PD1lLmxlbmd0aD9wYXJzZUludChlLnN1YnN0cmluZyg0LDYpLDEwKTp2b2lkIDAsaT04PD1lLmxlbmd0aD9lLnN1YnN0cmluZyg3LDEzKTp2b2lkIDAsaT1pP3BhcnNlSW50KGksMTApKk1hdGgucG93KDEwLDYtaS5sZW5ndGgpOnZvaWQgMDtpZih0JiYoaXNOYU4ocil8fHZvaWQgMCE9PWEmJmlzTmFOKGEpfHx2b2lkIDAhPT1uJiZpc05hTihuKXx8dm9pZCAwIT09aSYmaXNOYU4oaSl8fHI8MHx8MjM8cnx8YSYmKGE8MHx8NTk8YSl8fG4mJihuPDB8fDU5PG4pfHxpJiYoaTwwfHw5OTk5OTk8aSkpKXRocm93XCJpbnZhbGlkIFRNICdcIi5jb25jYXQoZSxcIidcIik7cmV0dXJue2hvdXJzOnIsbWludXRlczphLHNlY29uZHM6bixmcmFjdGlvbmFsU2Vjb25kczppfX1pZih0KXRocm93XCJpbnZhbGlkIFRNICdcIi5jb25jYXQoZSxcIidcIil9ZnVuY3Rpb24gaShlLHQscil7cmV0dXJuIWlzTmFOKHIpJiYoMDx0JiZ0PD0xMiYmMDxlJiZlPD1mdW5jdGlvbihlLHQpe3N3aXRjaChlKXtjYXNlIDI6cmV0dXJuIHQlND09MCYmdCUxMDB8fHQlNDAwPT0wPzI5OjI4O2Nhc2UgOTpjYXNlIDQ6Y2FzZSA2OmNhc2UgMTE6cmV0dXJuIDMwO2RlZmF1bHQ6cmV0dXJuIDMxfX0odCxyKSl9ZnVuY3Rpb24gbyhlLHQpe2lmKGUmJjg9PT1lLmxlbmd0aCl7dmFyIHI9cGFyc2VJbnQoZS5zdWJzdHJpbmcoMCw0KSwxMCksYT1wYXJzZUludChlLnN1YnN0cmluZyg0LDYpLDEwKSxuPXBhcnNlSW50KGUuc3Vic3RyaW5nKDYsOCksMTApO2lmKHQmJiEwIT09aShuLGEscikpdGhyb3dcImludmFsaWQgREEgJ1wiLmNvbmNhdChlLFwiJ1wiKTtyZXR1cm57eWVhcjpyLG1vbnRoOmEsZGF5Om59fWlmKHQpdGhyb3dcImludmFsaWQgREEgJ1wiLmNvbmNhdChlLFwiJ1wiKX1mdW5jdGlvbiBsKG4sZSl7aWYodm9pZCAwPT09bnx8dm9pZCAwPT09ZSl0aHJvd1wiZGljb21QYXJzZXIuZXhwbGljaXRFbGVtZW50VG9TdHJpbmc6IG1pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyc1wiO2lmKHZvaWQgMD09PWUudnIpdGhyb3dcImRpY29tUGFyc2VyLmV4cGxpY2l0RWxlbWVudFRvU3RyaW5nOiBjYW5ub3QgY29udmVydCBpbXBsaWNpdCBlbGVtZW50IHRvIHN0cmluZ1wiO3ZhciB0LHI9ZS52cixpPWUudGFnO2Z1bmN0aW9uIGEoZSx0KXtmb3IodmFyIHI9XCJcIixhPTA7YTxlO2ErKykwIT09YSYmKHIrPVwiL1wiKSxyKz10LmNhbGwobixpLGEpLnRvU3RyaW5nKCk7cmV0dXJuIHJ9aWYoITA9PT1kKHIpKXQ9bi5zdHJpbmcoaSk7ZWxzZXtpZihcIkFUXCI9PT1yKXt2YXIgbz1uLnVpbnQzMihpKTtyZXR1cm4gdm9pZCAwPT09bz92b2lkIDA6XCJ4XCIuY29uY2F0KChvPW88MD80Mjk0OTY3Mjk1K28rMTpvKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKSl9XCJVU1wiPT09cj90PWEoZS5sZW5ndGgvMixuLnVpbnQxNik6XCJTU1wiPT09cj90PWEoZS5sZW5ndGgvMixuLmludDE2KTpcIlVMXCI9PT1yP3Q9YShlLmxlbmd0aC80LG4udWludDMyKTpcIlNMXCI9PT1yP3Q9YShlLmxlbmd0aC80LG4uaW50MzIpOlwiRkRcIj09PXI/dD1hKGUubGVuZ3RoLzgsbi5kb3VibGUpOlwiRkxcIj09PXImJih0PWEoZS5sZW5ndGgvNCxuLmZsb2F0KSl9cmV0dXJuIHR9ZnVuY3Rpb24gdShlLHQpe2lmKHZvaWQgMD09PWUpdGhyb3dcImRpY29tUGFyc2VyLmV4cGxpY2l0RGF0YVNldFRvSlM6IG1pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyIGRhdGFTZXRcIjt0PXR8fHtvbWl0UHJpdmF0ZUF0dGlidXRlczohMCxtYXhFbGVtZW50TGVuZ3RoOjEyOH07dmFyIHIsYT17fTtmb3IociBpbiBlLmVsZW1lbnRzKXt2YXIgbj1lLmVsZW1lbnRzW3JdO2lmKCEwIT09dC5vbWl0UHJpdmF0ZUF0dGlidXRlc3x8IWYocikpaWYobi5pdGVtcyl7Zm9yKHZhciBpPVtdLG89MDtvPG4uaXRlbXMubGVuZ3RoO28rKylpLnB1c2godShuLml0ZW1zW29dLmRhdGFTZXQsdCkpO2Fbcl09aX1lbHNle3ZhciBzPXZvaWQgMDtuLmxlbmd0aDx0Lm1heEVsZW1lbnRMZW5ndGgmJihzPWwoZSxuKSksYVtyXT12b2lkIDAhPT1zP3M6e2RhdGFPZmZzZXQ6bi5kYXRhT2Zmc2V0LGxlbmd0aDpuLmxlbmd0aH19fXJldHVybiBhfWZ1bmN0aW9uIGMoZSx0KXtyZXR1cm4gMjU1PT09ZS5ieXRlQXJyYXlbdF0mJjIxNz09PWUuYnl0ZUFycmF5W3QrMV19ZnVuY3Rpb24gbShlLHQscil7Zm9yKHZhciBhLG4saT1yO2k8dC5mcmFnbWVudHMubGVuZ3RoO2krKylpZihhPWUsbj1pLG49dC5mcmFnbWVudHNbbl0sISghYyhhLG4ucG9zaXRpb24rbi5sZW5ndGgtMikmJiFjKGEsbi5wb3NpdGlvbituLmxlbmd0aC0zKSkpcmV0dXJuIGl9ZnVuY3Rpb24gcChlLHQscil7aWYodm9pZCAwPT09ZSl0aHJvd1wiZGljb21QYXJzZXIuY3JlYXRlSlBFR0Jhc2ljT2Zmc2V0VGFibGU6IG1pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyIGRhdGFTZXRcIjtpZih2b2lkIDA9PT10KXRocm93XCJkaWNvbVBhcnNlci5jcmVhdGVKUEVHQmFzaWNPZmZzZXRUYWJsZTogbWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXIgcGl4ZWxEYXRhRWxlbWVudFwiO2lmKFwieDdmZTAwMDEwXCIhPT10LnRhZyl0aHJvd1wiZGljb21QYXJzZXIuY3JlYXRlSlBFR0Jhc2ljT2Zmc2V0VGFibGU6IHBhcmFtZXRlciAncGl4ZWxEYXRhRWxlbWVudCcgcmVmZXJzIHRvIG5vbiBwaXhlbCBkYXRhIHRhZyAoZXhwZWN0ZWQgdGFnID0geDdmZTAwMDEwJ1wiO2lmKCEwIT09dC5lbmNhcHN1bGF0ZWRQaXhlbERhdGEpdGhyb3dcImRpY29tUGFyc2VyLmNyZWF0ZUpQRUdCYXNpY09mZnNldFRhYmxlOiBwYXJhbWV0ZXIgJ3BpeGVsRGF0YUVsZW1lbnQnIHJlZmVycyB0byBwaXhlbCBkYXRhIGVsZW1lbnQgdGhhdCBkb2VzIG5vdCBoYXZlIGVuY2Fwc3VsYXRlZCBwaXhlbCBkYXRhXCI7aWYoITAhPT10LmhhZFVuZGVmaW5lZExlbmd0aCl0aHJvd1wiZGljb21QYXJzZXIuY3JlYXRlSlBFR0Jhc2ljT2Zmc2V0VGFibGU6IHBhcmFtZXRlciAncGl4ZWxEYXRhRWxlbWVudCcgcmVmZXJzIHRvIHBpeGVsIGRhdGEgZWxlbWVudCB0aGF0IGRvZXMgbm90IGhhdmUgZW5jYXBzdWxhdGVkIHBpeGVsIGRhdGFcIjtpZih2b2lkIDA9PT10LmJhc2ljT2Zmc2V0VGFibGUpdGhyb3dcImRpY29tUGFyc2VyLmNyZWF0ZUpQRUdCYXNpY09mZnNldFRhYmxlOiBwYXJhbWV0ZXIgJ3BpeGVsRGF0YUVsZW1lbnQnIHJlZmVycyB0byBwaXhlbCBkYXRhIGVsZW1lbnQgdGhhdCBkb2VzIG5vdCBoYXZlIGVuY2Fwc3VsYXRlZCBwaXhlbCBkYXRhXCI7aWYodm9pZCAwPT09dC5mcmFnbWVudHMpdGhyb3dcImRpY29tUGFyc2VyLmNyZWF0ZUpQRUdCYXNpY09mZnNldFRhYmxlOiBwYXJhbWV0ZXIgJ3BpeGVsRGF0YUVsZW1lbnQnIHJlZmVycyB0byBwaXhlbCBkYXRhIGVsZW1lbnQgdGhhdCBkb2VzIG5vdCBoYXZlIGVuY2Fwc3VsYXRlZCBwaXhlbCBkYXRhXCI7aWYodC5mcmFnbWVudHMubGVuZ3RoPD0wKXRocm93XCJkaWNvbVBhcnNlci5jcmVhdGVKUEVHQmFzaWNPZmZzZXRUYWJsZTogcGFyYW1ldGVyICdwaXhlbERhdGFFbGVtZW50JyByZWZlcnMgdG8gcGl4ZWwgZGF0YSBlbGVtZW50IHRoYXQgZG9lcyBub3QgaGF2ZSBlbmNhcHN1bGF0ZWQgcGl4ZWwgZGF0YVwiO2lmKHImJnIubGVuZ3RoPD0wKXRocm93XCJkaWNvbVBhcnNlci5jcmVhdGVKUEVHQmFzaWNPZmZzZXRUYWJsZTogcGFyYW1ldGVyICdmcmFnbWVudHMnIG11c3Qgbm90IGJlIHplcm8gbGVuZ3RoXCI7cj1yfHx0LmZyYWdtZW50cztmb3IodmFyIGE9W10sbj0wOzspe2EucHVzaCh0LmZyYWdtZW50c1tuXS5vZmZzZXQpO3ZhciBpPW0oZSx0LG4pO2lmKHZvaWQgMD09PWl8fGk9PT10LmZyYWdtZW50cy5sZW5ndGgtMSlyZXR1cm4gYTtuPWkrMX19ZnVuY3Rpb24gaChlKXtpZih2b2lkIDA9PT1lKXRocm93XCJkaWNvbVBhcnNlci5yZWFkVGFnOiBtaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlciAnYnl0ZVN0cmVhbSdcIjt2YXIgdD0yNTYqZS5yZWFkVWludDE2KCkqMjU2LGU9ZS5yZWFkVWludDE2KCk7cmV0dXJuXCJ4XCIuY29uY2F0KFwiMDAwMDAwMDBcIi5jb25jYXQoKHQrZSkudG9TdHJpbmcoMTYpKS5zdWJzdHIoLTgpKX1mdW5jdGlvbiBnKGUsdCxyKXtpZih2b2lkIDA9PT1lKXRocm93XCJkaWNvbVBhcnNlci5maW5kRW5kT2ZFbmNhcHN1bGF0ZWRFbGVtZW50OiBtaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlciAnYnl0ZVN0cmVhbSdcIjtpZih2b2lkIDA9PT10KXRocm93XCJkaWNvbVBhcnNlci5maW5kRW5kT2ZFbmNhcHN1bGF0ZWRFbGVtZW50OiBtaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlciAnZWxlbWVudCdcIjtpZih0LmVuY2Fwc3VsYXRlZFBpeGVsRGF0YT0hMCx0LmJhc2ljT2Zmc2V0VGFibGU9W10sdC5mcmFnbWVudHM9W10sXCJ4ZmZmZWUwMDBcIiE9PWgoZSkpdGhyb3dcImRpY29tUGFyc2VyLmZpbmRFbmRPZkVuY2Fwc3VsYXRlZEVsZW1lbnQ6IGJhc2ljIG9mZnNldCB0YWJsZSBub3QgZm91bmRcIjtmb3IodmFyIGE9ZS5yZWFkVWludDMyKCkvNCxuPTA7bjxhO24rKyl7dmFyIGk9ZS5yZWFkVWludDMyKCk7dC5iYXNpY09mZnNldFRhYmxlLnB1c2goaSl9Zm9yKHZhciBvPWUucG9zaXRpb247ZS5wb3NpdGlvbjxlLmJ5dGVBcnJheS5sZW5ndGg7KXt2YXIgcz1oKGUpLGQ9ZS5yZWFkVWludDMyKCk7aWYoXCJ4ZmZmZWUwZGRcIj09PXMpcmV0dXJuIGUuc2VlayhkKSx2b2lkKHQubGVuZ3RoPWUucG9zaXRpb24tdC5kYXRhT2Zmc2V0KTtpZihcInhmZmZlZTAwMFwiIT09cylyZXR1cm4gciYmci5wdXNoKFwidW5leHBlY3RlZCB0YWcgXCIuY29uY2F0KHMsXCIgd2hpbGUgc2VhcmNoaW5nIGZvciBlbmQgb2YgcGl4ZWwgZGF0YSBlbGVtZW50IHdpdGggdW5kZWZpbmVkIGxlbmd0aFwiKSksZD5lLmJ5dGVBcnJheS5sZW5ndGgtZS5wb3NpdGlvbiYmKGQ9ZS5ieXRlQXJyYXkubGVuZ3RoLWUucG9zaXRpb24pLHQuZnJhZ21lbnRzLnB1c2goe29mZnNldDplLnBvc2l0aW9uLW8tOCxwb3NpdGlvbjplLnBvc2l0aW9uLGxlbmd0aDpkfSksZS5zZWVrKGQpLHZvaWQodC5sZW5ndGg9ZS5wb3NpdGlvbi10LmRhdGFPZmZzZXQpO3QuZnJhZ21lbnRzLnB1c2goe29mZnNldDplLnBvc2l0aW9uLW8tOCxwb3NpdGlvbjplLnBvc2l0aW9uLGxlbmd0aDpkfSksZS5zZWVrKGQpfXImJnIucHVzaChcInBpeGVsIGRhdGEgZWxlbWVudCBcIi5jb25jYXQodC50YWcsXCIgbWlzc2luZyBzZXF1ZW5jZSBkZWxpbWl0ZXIgdGFnIHhmZmZlZTBkZFwiKSl9ZnVuY3Rpb24geShlLHQpe2lmKHZvaWQgMD09PWUpdGhyb3dcImRpY29tUGFyc2VyLmZpbmRBbmRTZXRVTkVsZW1lbnRMZW5ndGg6IG1pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyICdieXRlU3RyZWFtJ1wiO2Zvcih2YXIgcj1lLmJ5dGVBcnJheS5sZW5ndGgtODtlLnBvc2l0aW9uPD1yOylpZig2NTUzND09PWUucmVhZFVpbnQxNigpKXt2YXIgYT1lLnJlYWRVaW50MTYoKTtpZig1NzU2NT09PWEpcmV0dXJuIDAhPT1lLnJlYWRVaW50MzIoKSYmZS53YXJuaW5ncyhcImVuY291bnRlcmVkIG5vbiB6ZXJvIGxlbmd0aCBmb2xsb3dpbmcgaXRlbSBkZWxpbWl0ZXIgYXQgcG9zaXRpb24gXCIuY29uY2F0KGUucG9zaXRpb24tNCxcIiB3aGlsZSByZWFkaW5nIGVsZW1lbnQgb2YgdW5kZWZpbmVkIGxlbmd0aCB3aXRoIHRhZyBcIikuY29uY2F0KHQudGFnKSksdm9pZCh0Lmxlbmd0aD1lLnBvc2l0aW9uLXQuZGF0YU9mZnNldCl9dC5sZW5ndGg9ZS5ieXRlQXJyYXkubGVuZ3RoLXQuZGF0YU9mZnNldCxlLnNlZWsoZS5ieXRlQXJyYXkubGVuZ3RoLWUucG9zaXRpb24pfWZ1bmN0aW9uIGIoZSx0LHIpe2lmKHI8MCl0aHJvd1wiZGljb21QYXJzZXIucmVhZEZpeGVkU3RyaW5nIC0gbGVuZ3RoIGNhbm5vdCBiZSBsZXNzIHRoYW4gMFwiO2lmKHQrcj5lLmxlbmd0aCl0aHJvd1wiZGljb21QYXJzZXIucmVhZEZpeGVkU3RyaW5nOiBhdHRlbXB0IHRvIHJlYWQgcGFzdCBlbmQgb2YgYnVmZmVyXCI7Zm9yKHZhciBhLG49XCJcIixpPTA7aTxyO2krKyl7aWYoMD09PShhPWVbdCtpXSkpcmV0dXJuIHQrPXIsbjtuKz1TdHJpbmcuZnJvbUNoYXJDb2RlKGEpfXJldHVybiBufWZ1bmN0aW9uIHYoZSx0KXtmb3IodmFyIHI9MDtyPHQubGVuZ3RoO3IrKyl7dmFyIGE9dFtyXTthLmVudW1lcmFibGU9YS5lbnVtZXJhYmxlfHwhMSxhLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBhJiYoYS53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsYS5rZXksYSl9fWZ1bmN0aW9uIFAoZSx0KXtyZXR1cm4gdm9pZCAwIT09ZS5wYXJzZXI/ZS5wYXJzZXI6dH12YXIgdz1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoZSx0LHIpeyFmdW5jdGlvbihlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsYSksdGhpcy5ieXRlQXJyYXlQYXJzZXI9ZSx0aGlzLmJ5dGVBcnJheT10LHRoaXMuZWxlbWVudHM9cn12YXIgZSx0LHI7cmV0dXJuIGU9YSwodD1be2tleTpcInVpbnQxNlwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7ZT10aGlzLmVsZW1lbnRzW2VdO2lmKHQ9dm9pZCAwIT09dD90OjAsZSYmMCE9PWUubGVuZ3RoKXJldHVybiBQKGUsdGhpcy5ieXRlQXJyYXlQYXJzZXIpLnJlYWRVaW50MTYodGhpcy5ieXRlQXJyYXksZS5kYXRhT2Zmc2V0KzIqdCl9fSx7a2V5OlwiaW50MTZcIix2YWx1ZTpmdW5jdGlvbihlLHQpe2U9dGhpcy5lbGVtZW50c1tlXTtpZih0PXZvaWQgMCE9PXQ/dDowLGUmJjAhPT1lLmxlbmd0aClyZXR1cm4gUChlLHRoaXMuYnl0ZUFycmF5UGFyc2VyKS5yZWFkSW50MTYodGhpcy5ieXRlQXJyYXksZS5kYXRhT2Zmc2V0KzIqdCl9fSx7a2V5OlwidWludDMyXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXtlPXRoaXMuZWxlbWVudHNbZV07aWYodD12b2lkIDAhPT10P3Q6MCxlJiYwIT09ZS5sZW5ndGgpcmV0dXJuIFAoZSx0aGlzLmJ5dGVBcnJheVBhcnNlcikucmVhZFVpbnQzMih0aGlzLmJ5dGVBcnJheSxlLmRhdGFPZmZzZXQrNCp0KX19LHtrZXk6XCJpbnQzMlwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7ZT10aGlzLmVsZW1lbnRzW2VdO2lmKHQ9dm9pZCAwIT09dD90OjAsZSYmMCE9PWUubGVuZ3RoKXJldHVybiBQKGUsdGhpcy5ieXRlQXJyYXlQYXJzZXIpLnJlYWRJbnQzMih0aGlzLmJ5dGVBcnJheSxlLmRhdGFPZmZzZXQrNCp0KX19LHtrZXk6XCJmbG9hdFwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7ZT10aGlzLmVsZW1lbnRzW2VdO2lmKHQ9dm9pZCAwIT09dD90OjAsZSYmMCE9PWUubGVuZ3RoKXJldHVybiBQKGUsdGhpcy5ieXRlQXJyYXlQYXJzZXIpLnJlYWRGbG9hdCh0aGlzLmJ5dGVBcnJheSxlLmRhdGFPZmZzZXQrNCp0KX19LHtrZXk6XCJkb3VibGVcIix2YWx1ZTpmdW5jdGlvbihlLHQpe2U9dGhpcy5lbGVtZW50c1tlXTtpZih0PXZvaWQgMCE9PXQ/dDowLGUmJjAhPT1lLmxlbmd0aClyZXR1cm4gUChlLHRoaXMuYnl0ZUFycmF5UGFyc2VyKS5yZWFkRG91YmxlKHRoaXMuYnl0ZUFycmF5LGUuZGF0YU9mZnNldCs4KnQpfX0se2tleTpcIm51bVN0cmluZ1ZhbHVlc1wiLHZhbHVlOmZ1bmN0aW9uKGUpe2U9dGhpcy5lbGVtZW50c1tlXTtpZihlJiYwPGUubGVuZ3RoKXtlPWIodGhpcy5ieXRlQXJyYXksZS5kYXRhT2Zmc2V0LGUubGVuZ3RoKS5tYXRjaCgvXFxcXC9nKTtyZXR1cm4gbnVsbD09PWU/MTplLmxlbmd0aCsxfX19LHtrZXk6XCJzdHJpbmdcIix2YWx1ZTpmdW5jdGlvbihlLHQpe2U9dGhpcy5lbGVtZW50c1tlXTtpZihlJiZlLlZhbHVlKXJldHVybiBlLlZhbHVlO2lmKGUmJjA8ZS5sZW5ndGgpe2U9Yih0aGlzLmJ5dGVBcnJheSxlLmRhdGFPZmZzZXQsZS5sZW5ndGgpO3JldHVybiAwPD10P2Uuc3BsaXQoXCJcXFxcXCIpW3RdLnRyaW0oKTplLnRyaW0oKX19fSx7a2V5OlwidGV4dFwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7ZT10aGlzLmVsZW1lbnRzW2VdO2lmKGUmJjA8ZS5sZW5ndGgpe2U9Yih0aGlzLmJ5dGVBcnJheSxlLmRhdGFPZmZzZXQsZS5sZW5ndGgpO3JldHVybiAwPD10P2Uuc3BsaXQoXCJcXFxcXCIpW3RdLnJlcGxhY2UoLyArJC8sXCJcIik6ZS5yZXBsYWNlKC8gKyQvLFwiXCIpfX19LHtrZXk6XCJmbG9hdFN0cmluZ1wiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcy5lbGVtZW50c1tlXTtpZihyJiYwPHIubGVuZ3RoKXt0PXRoaXMuc3RyaW5nKGUsdD12b2lkIDAhPT10P3Q6MCk7aWYodm9pZCAwIT09dClyZXR1cm4gcGFyc2VGbG9hdCh0KX19fSx7a2V5OlwiaW50U3RyaW5nXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzLmVsZW1lbnRzW2VdO2lmKHImJjA8ci5sZW5ndGgpe3Q9dGhpcy5zdHJpbmcoZSx0PXZvaWQgMCE9PXQ/dDowKTtpZih2b2lkIDAhPT10KXJldHVybiBwYXJzZUludCh0KX19fSx7a2V5OlwiYXR0cmlidXRlVGFnXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5lbGVtZW50c1tlXTtpZih0JiY0PT09dC5sZW5ndGgpe3ZhciByPVAodCx0aGlzLmJ5dGVBcnJheVBhcnNlcikucmVhZFVpbnQxNixlPXRoaXMuYnl0ZUFycmF5LHQ9dC5kYXRhT2Zmc2V0O3JldHVyblwieFwiLmNvbmNhdChcIjAwMDAwMDAwXCIuY29uY2F0KCgyNTYqcihlLHQpKjI1NityKGUsdCsyKSkudG9TdHJpbmcoMTYpKS5zdWJzdHIoLTgpKX19fV0pJiZ2KGUucHJvdG90eXBlLHQpLHImJnYoZSxyKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcInByb3RvdHlwZVwiLHt3cml0YWJsZTohMX0pLGF9KCk7ZnVuY3Rpb24geChlLHQpe2lmKHZvaWQgMD09PWUpdGhyb3dcImRpY29tUGFyc2VyLnJlYWREaWNvbUVsZW1lbnRJbXBsaWNpdDogbWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXIgJ2J5dGVTdHJlYW0nXCI7Zm9yKHZhciByPWUuYnl0ZUFycmF5Lmxlbmd0aC04O2UucG9zaXRpb248PXI7KWlmKDY1NTM0PT09ZS5yZWFkVWludDE2KCkpe3ZhciBhPWUucmVhZFVpbnQxNigpO2lmKDU3MzU3PT09YSlyZXR1cm4gMCE9PWUucmVhZFVpbnQzMigpJiZlLndhcm5pbmdzKFwiZW5jb3VudGVyZWQgbm9uIHplcm8gbGVuZ3RoIGZvbGxvd2luZyBpdGVtIGRlbGltaXRlciBhdCBwb3NpdGlvbiBcIi5jb25jYXQoZS5wb3NpdGlvbi00LFwiIHdoaWxlIHJlYWRpbmcgZWxlbWVudCBvZiB1bmRlZmluZWQgbGVuZ3RoIHdpdGggdGFnIFwiKS5jb25jYXQodC50YWcpKSx2b2lkKHQubGVuZ3RoPWUucG9zaXRpb24tdC5kYXRhT2Zmc2V0KX10Lmxlbmd0aD1lLmJ5dGVBcnJheS5sZW5ndGgtdC5kYXRhT2Zmc2V0LGUuc2VlayhlLmJ5dGVBcnJheS5sZW5ndGgtZS5wb3NpdGlvbil9dmFyIEU9ZnVuY3Rpb24oZSx0KXtpZih2b2lkIDAhPT1lLnZyKXJldHVyblwiU1FcIj09PWUudnI7aWYodC5wb3NpdGlvbis0PD10LmJ5dGVBcnJheS5sZW5ndGgpe2U9aCh0KTtyZXR1cm4gdC5zZWVrKC00KSxcInhmZmZlZTAwMFwiPT09ZXx8XCJ4ZmZmZWUwZGRcIj09PWV9cmV0dXJuIHQud2FybmluZ3MucHVzaChcImVvZiBlbmNvdW50ZXJlZCBiZWZvcmUgZmluZGluZyBzZXF1ZW5jZSBpdGVtIHRhZyBvciBzZXF1ZW5jZSBkZWxpbWl0ZXIgdGFnIGluIHBlZWtpbmcgdG8gZGV0ZXJtaW5lIFZSXCIpLCExfTtmdW5jdGlvbiBBKGUsdCxyKXtpZih2b2lkIDA9PT1lKXRocm93XCJkaWNvbVBhcnNlci5yZWFkRGljb21FbGVtZW50SW1wbGljaXQ6IG1pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyICdieXRlU3RyZWFtJ1wiO3ZhciBhPWgoZSksYT17dGFnOmEsdnI6dm9pZCAwIT09cj9yKGEpOnZvaWQgMCxsZW5ndGg6ZS5yZWFkVWludDMyKCksZGF0YU9mZnNldDplLnBvc2l0aW9ufTtyZXR1cm4gNDI5NDk2NzI5NT09PWEubGVuZ3RoJiYoYS5oYWRVbmRlZmluZWRMZW5ndGg9ITApLGEudGFnPT09dHx8KCFFKGEsZSl8fGYoYS50YWcpJiYhYS5oYWRVbmRlZmluZWRMZW5ndGg/YS5oYWRVbmRlZmluZWRMZW5ndGg/eChlLGEpOmUuc2VlayhhLmxlbmd0aCk6KEYoZSxhLHIpLGYoYS50YWcpJiYoYS5pdGVtcz12b2lkIDApKSksYX1mdW5jdGlvbiBTKGUpe2lmKHZvaWQgMD09PWUpdGhyb3dcImRpY29tUGFyc2VyLnJlYWRTZXF1ZW5jZUl0ZW06IG1pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyICdieXRlU3RyZWFtJ1wiO3ZhciB0PXt0YWc6aChlKSxsZW5ndGg6ZS5yZWFkVWludDMyKCksZGF0YU9mZnNldDplLnBvc2l0aW9ufTtpZihcInhmZmZlZTAwMFwiIT09dC50YWcpdGhyb3dcImRpY29tUGFyc2VyLnJlYWRTZXF1ZW5jZUl0ZW06IGl0ZW0gdGFnIChGRkZFLEUwMDApIG5vdCBmb3VuZCBhdCBvZmZzZXQgXCIuY29uY2F0KGUucG9zaXRpb24pO3JldHVybiB0fWZ1bmN0aW9uIEQoZSx0KXt2YXIgcj1TKGUpO3JldHVybiA0Mjk0OTY3Mjk1PT09ci5sZW5ndGg/KHIuaGFkVW5kZWZpbmVkTGVuZ3RoPSEwLHIuZGF0YVNldD1mdW5jdGlvbihlLHQpe2Zvcih2YXIgcj17fTtlLnBvc2l0aW9uPGUuYnl0ZUFycmF5Lmxlbmd0aDspe3ZhciBhPUEoZSx2b2lkIDAsdCk7aWYoXCJ4ZmZmZWUwMGRcIj09PShyW2EudGFnXT1hKS50YWcpcmV0dXJuIG5ldyB3KGUuYnl0ZUFycmF5UGFyc2VyLGUuYnl0ZUFycmF5LHIpfXJldHVybiBlLndhcm5pbmdzLnB1c2goXCJlb2YgZW5jb3VudGVyZWQgYmVmb3JlIGZpbmRpbmcgc2VxdWVuY2UgaXRlbSBkZWxpbWl0ZXIgaW4gc2VxdWVuY2UgaXRlbSBvZiB1bmRlZmluZWQgbGVuZ3RoXCIpLG5ldyB3KGUuYnl0ZUFycmF5UGFyc2VyLGUuYnl0ZUFycmF5LHIpfShlLHQpLHIubGVuZ3RoPWUucG9zaXRpb24tci5kYXRhT2Zmc2V0KTooci5kYXRhU2V0PW5ldyB3KGUuYnl0ZUFycmF5UGFyc2VyLGUuYnl0ZUFycmF5LHt9KSxUKHIuZGF0YVNldCxlLGUucG9zaXRpb24rci5sZW5ndGgse3ZyQ2FsbGJhY2s6dH0pKSxyfWZ1bmN0aW9uIEYoZSx0LHIpe2lmKHZvaWQgMD09PWUpdGhyb3dcImRpY29tUGFyc2VyLnJlYWRTZXF1ZW5jZUl0ZW1zSW1wbGljaXQ6IG1pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyICdieXRlU3RyZWFtJ1wiO2lmKHZvaWQgMD09PXQpdGhyb3dcImRpY29tUGFyc2VyLnJlYWRTZXF1ZW5jZUl0ZW1zSW1wbGljaXQ6IG1pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyICdlbGVtZW50J1wiO3QuaXRlbXM9W10sKDQyOTQ5NjcyOTU9PT10Lmxlbmd0aD9mdW5jdGlvbihlLHQscil7Zm9yKDtlLnBvc2l0aW9uKzQ8PWUuYnl0ZUFycmF5Lmxlbmd0aDspe3ZhciBhPWgoZSk7aWYoZS5zZWVrKC00KSxcInhmZmZlZTBkZFwiPT09YSlyZXR1cm4gdC5sZW5ndGg9ZS5wb3NpdGlvbi10LmRhdGFPZmZzZXQsZS5zZWVrKDgpO2E9RChlLHIpO3QuaXRlbXMucHVzaChhKX1lLndhcm5pbmdzLnB1c2goXCJlb2YgZW5jb3VudGVyZWQgYmVmb3JlIGZpbmRpbmcgc2VxdWVuY2UgZGVsaW1pdGVyIGluIHNlcXVlbmNlIG9mIHVuZGVmaW5lZCBsZW5ndGhcIiksdC5sZW5ndGg9ZS5ieXRlQXJyYXkubGVuZ3RoLXQuZGF0YU9mZnNldH06ZnVuY3Rpb24oZSx0LHIpe2Zvcih2YXIgYT10LmRhdGFPZmZzZXQrdC5sZW5ndGg7ZS5wb3NpdGlvbjxhOyl7dmFyIG49RChlLHIpO3QuaXRlbXMucHVzaChuKX19KShlLHQscil9ZnVuY3Rpb24gTyhlLHQpe3ZhciByPVMoZSk7cmV0dXJuIDQyOTQ5NjcyOTU9PT1yLmxlbmd0aD8oci5oYWRVbmRlZmluZWRMZW5ndGg9ITAsci5kYXRhU2V0PWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciByPXt9O2UucG9zaXRpb248ZS5ieXRlQXJyYXkubGVuZ3RoOyl7dmFyIGE9QihlLHQpO2lmKFwieGZmZmVlMDBkXCI9PT0oclthLnRhZ109YSkudGFnKXJldHVybiBuZXcgdyhlLmJ5dGVBcnJheVBhcnNlcixlLmJ5dGVBcnJheSxyKX1yZXR1cm4gdC5wdXNoKFwiZW9mIGVuY291bnRlcmVkIGJlZm9yZSBmaW5kaW5nIGl0ZW0gZGVsaW1pdGVyIHRhZyB3aGlsZSByZWFkaW5nIHNlcXVlbmNlIGl0ZW0gb2YgdW5kZWZpbmVkIGxlbmd0aFwiKSxuZXcgdyhlLmJ5dGVBcnJheVBhcnNlcixlLmJ5dGVBcnJheSxyKX0oZSx0KSxyLmxlbmd0aD1lLnBvc2l0aW9uLXIuZGF0YU9mZnNldCk6KHIuZGF0YVNldD1uZXcgdyhlLmJ5dGVBcnJheVBhcnNlcixlLmJ5dGVBcnJheSx7fSkscShyLmRhdGFTZXQsZSxlLnBvc2l0aW9uK3IubGVuZ3RoKSkscn1mdW5jdGlvbiBJKGUsdCxyKXtpZih2b2lkIDA9PT1lKXRocm93XCJkaWNvbVBhcnNlci5yZWFkU2VxdWVuY2VJdGVtc0V4cGxpY2l0OiBtaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlciAnYnl0ZVN0cmVhbSdcIjtpZih2b2lkIDA9PT10KXRocm93XCJkaWNvbVBhcnNlci5yZWFkU2VxdWVuY2VJdGVtc0V4cGxpY2l0OiBtaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlciAnZWxlbWVudCdcIjt0Lml0ZW1zPVtdLCg0Mjk0OTY3Mjk1PT09dC5sZW5ndGg/ZnVuY3Rpb24oZSx0LHIpe2Zvcig7ZS5wb3NpdGlvbis0PD1lLmJ5dGVBcnJheS5sZW5ndGg7KXt2YXIgYT1oKGUpO2lmKGUuc2VlaygtNCksXCJ4ZmZmZWUwZGRcIj09PWEpcmV0dXJuIHQubGVuZ3RoPWUucG9zaXRpb24tdC5kYXRhT2Zmc2V0LGUuc2Vlayg4KTthPU8oZSxyKTt0Lml0ZW1zLnB1c2goYSl9ci5wdXNoKFwiZW9mIGVuY291bnRlcmVkIGJlZm9yZSBmaW5kaW5nIHNlcXVlbmNlIGRlbGltaXRhdGlvbiB0YWcgd2hpbGUgcmVhZGluZyBzZXF1ZW5jZSBvZiB1bmRlZmluZWQgbGVuZ3RoXCIpLHQubGVuZ3RoPWUucG9zaXRpb24tdC5kYXRhT2Zmc2V0fTpmdW5jdGlvbihlLHQscil7Zm9yKHZhciBhPXQuZGF0YU9mZnNldCt0Lmxlbmd0aDtlLnBvc2l0aW9uPGE7KXt2YXIgbj1PKGUscik7dC5pdGVtcy5wdXNoKG4pfX0pKGUsdCxyKX12YXIgVT1mdW5jdGlvbihlKXtyZXR1cm5cIk9CXCI9PT1lfHxcIk9EXCI9PT1lfHxcIk9MXCI9PT1lfHxcIk9XXCI9PT1lfHxcIlNRXCI9PT1lfHxcIk9GXCI9PT1lfHxcIlVDXCI9PT1lfHxcIlVSXCI9PT1lfHxcIlVUXCI9PT1lfHxcIlVOXCI9PT1lPzQ6Mn07ZnVuY3Rpb24gQihlLHQscil7aWYodm9pZCAwPT09ZSl0aHJvd1wiZGljb21QYXJzZXIucmVhZERpY29tRWxlbWVudEV4cGxpY2l0OiBtaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlciAnYnl0ZVN0cmVhbSdcIjt2YXIgYT17dGFnOmgoZSksdnI6ZS5yZWFkRml4ZWRTdHJpbmcoMil9O3JldHVybiAyPT09VShhLnZyKT9hLmxlbmd0aD1lLnJlYWRVaW50MTYoKTooZS5zZWVrKDIpLGEubGVuZ3RoPWUucmVhZFVpbnQzMigpKSxhLmRhdGFPZmZzZXQ9ZS5wb3NpdGlvbiw0Mjk0OTY3Mjk1PT09YS5sZW5ndGgmJihhLmhhZFVuZGVmaW5lZExlbmd0aD0hMCksYS50YWc9PT1yfHwoXCJTUVwiPT09YS52cj9JKGUsYSx0KTo0Mjk0OTY3Mjk1PT09YS5sZW5ndGg/XCJ4N2ZlMDAwMTBcIj09PWEudGFnP2coZSxhLHQpOihcIlVOXCI9PT1hLnZyP0Y6eCkoZSxhKTplLnNlZWsoYS5sZW5ndGgpKSxhfWZ1bmN0aW9uIHEoZSx0LHIpe3ZhciBhPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTp7fTtpZihyPXZvaWQgMD09PXI/dC5ieXRlQXJyYXkubGVuZ3RoOnIsdm9pZCAwPT09dCl0aHJvd1wiZGljb21QYXJzZXIucGFyc2VEaWNvbURhdGFTZXRFeHBsaWNpdDogbWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXIgJ2J5dGVTdHJlYW0nXCI7aWYocjx0LnBvc2l0aW9ufHxyPnQuYnl0ZUFycmF5Lmxlbmd0aCl0aHJvd1wiZGljb21QYXJzZXIucGFyc2VEaWNvbURhdGFTZXRFeHBsaWNpdDogaW52YWxpZCB2YWx1ZSBmb3IgcGFyYW1ldGVyICdtYXhQIG9zaXRpb24nXCI7Zm9yKHZhciBuPWUuZWxlbWVudHM7dC5wb3NpdGlvbjxyOyl7dmFyIGk9Qih0LGUud2FybmluZ3MsYS51bnRpbFRhZyk7aWYoKG5baS50YWddPWkpLnRhZz09PWEudW50aWxUYWcpcmV0dXJufWlmKHQucG9zaXRpb24+cil0aHJvd1wiZGljb21QYXJzZXI6cGFyc2VEaWNvbURhdGFTZXRFeHBsaWNpdDogYnVmZmVyIG92ZXJydW5cIn1mdW5jdGlvbiBUKGUsdCxyKXt2YXIgYT0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106e307aWYocj12b2lkIDA9PT1yP2UuYnl0ZUFycmF5Lmxlbmd0aDpyLHZvaWQgMD09PXQpdGhyb3dcImRpY29tUGFyc2VyLnBhcnNlRGljb21EYXRhU2V0SW1wbGljaXQ6IG1pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyICdieXRlU3RyZWFtJ1wiO2lmKHI8dC5wb3NpdGlvbnx8cj50LmJ5dGVBcnJheS5sZW5ndGgpdGhyb3dcImRpY29tUGFyc2VyLnBhcnNlRGljb21EYXRhU2V0SW1wbGljaXQ6IGludmFsaWQgdmFsdWUgZm9yIHBhcmFtZXRlciAnbWF4UG9zaXRpb24nXCI7Zm9yKHZhciBuPWUuZWxlbWVudHM7dC5wb3NpdGlvbjxyOyl7dmFyIGk9QSh0LGEudW50aWxUYWcsYS52ckNhbGxiYWNrKTtpZigobltpLnRhZ109aSkudGFnPT09YS51bnRpbFRhZylyZXR1cm59fWZ1bmN0aW9uIGsoZSx0KXtpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgQnVmZmVyJiZlIGluc3RhbmNlb2YgQnVmZmVyKXJldHVybiBCdWZmZXIuYWxsb2ModCk7aWYoZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpcmV0dXJuIG5ldyBVaW50OEFycmF5KHQpO3Rocm93XCJkaWNvbVBhcnNlci5hbGxvYzogdW5rbm93biB0eXBlIGZvciBieXRlQXJyYXlcIn12YXIgTD1cIjEuOC4xMlwiLE49e3JlYWRVaW50MTY6ZnVuY3Rpb24oZSx0KXtpZih0PDApdGhyb3dcImJpZ0VuZGlhbkJ5dGVBcnJheVBhcnNlci5yZWFkVWludDE2OiBwb3NpdGlvbiBjYW5ub3QgYmUgbGVzcyB0aGFuIDBcIjtpZih0KzI+ZS5sZW5ndGgpdGhyb3dcImJpZ0VuZGlhbkJ5dGVBcnJheVBhcnNlci5yZWFkVWludDE2OiBhdHRlbXB0IHRvIHJlYWQgcGFzdCBlbmQgb2YgYnVmZmVyXCI7cmV0dXJuKGVbdF08PDgpK2VbdCsxXX0scmVhZEludDE2OmZ1bmN0aW9uKGUsdCl7aWYodDwwKXRocm93XCJiaWdFbmRpYW5CeXRlQXJyYXlQYXJzZXIucmVhZEludDE2OiBwb3NpdGlvbiBjYW5ub3QgYmUgbGVzcyB0aGFuIDBcIjtpZih0KzI+ZS5sZW5ndGgpdGhyb3dcImJpZ0VuZGlhbkJ5dGVBcnJheVBhcnNlci5yZWFkSW50MTY6IGF0dGVtcHQgdG8gcmVhZCBwYXN0IGVuZCBvZiBidWZmZXJcIjt0PShlW3RdPDw4KStlW3QrMV07cmV0dXJuIHQ9MzI3NjgmdD90LTY1NTM1LTE6dH0scmVhZFVpbnQzMjpmdW5jdGlvbihlLHQpe2lmKHQ8MCl0aHJvd1wiYmlnRW5kaWFuQnl0ZUFycmF5UGFyc2VyLnJlYWRVaW50MzI6IHBvc2l0aW9uIGNhbm5vdCBiZSBsZXNzIHRoYW4gMFwiO2lmKHQrND5lLmxlbmd0aCl0aHJvd1wiYmlnRW5kaWFuQnl0ZUFycmF5UGFyc2VyLnJlYWRVaW50MzI6IGF0dGVtcHQgdG8gcmVhZCBwYXN0IGVuZCBvZiBidWZmZXJcIjtyZXR1cm4gMjU2KigyNTYqKDI1NiplW3RdK2VbdCsxXSkrZVt0KzJdKStlW3QrM119LHJlYWRJbnQzMjpmdW5jdGlvbihlLHQpe2lmKHQ8MCl0aHJvd1wiYmlnRW5kaWFuQnl0ZUFycmF5UGFyc2VyLnJlYWRJbnQzMjogcG9zaXRpb24gY2Fubm90IGJlIGxlc3MgdGhhbiAwXCI7aWYodCs0PmUubGVuZ3RoKXRocm93XCJiaWdFbmRpYW5CeXRlQXJyYXlQYXJzZXIucmVhZEludDMyOiBhdHRlbXB0IHRvIHJlYWQgcGFzdCBlbmQgb2YgYnVmZmVyXCI7cmV0dXJuKGVbdF08PDI0KSsoZVt0KzFdPDwxNikrKGVbdCsyXTw8OCkrZVt0KzNdfSxyZWFkRmxvYXQ6ZnVuY3Rpb24oZSx0KXtpZih0PDApdGhyb3dcImJpZ0VuZGlhbkJ5dGVBcnJheVBhcnNlci5yZWFkRmxvYXQ6IHBvc2l0aW9uIGNhbm5vdCBiZSBsZXNzIHRoYW4gMFwiO2lmKHQrND5lLmxlbmd0aCl0aHJvd1wiYmlnRW5kaWFuQnl0ZUFycmF5UGFyc2VyLnJlYWRGbG9hdDogYXR0ZW1wdCB0byByZWFkIHBhc3QgZW5kIG9mIGJ1ZmZlclwiO3ZhciByPW5ldyBVaW50OEFycmF5KDQpO3JldHVybiByWzNdPWVbdF0sclsyXT1lW3QrMV0sclsxXT1lW3QrMl0sclswXT1lW3QrM10sbmV3IEZsb2F0MzJBcnJheShyLmJ1ZmZlcilbMF19LHJlYWREb3VibGU6ZnVuY3Rpb24oZSx0KXtpZih0PDApdGhyb3dcImJpZ0VuZGlhbkJ5dGVBcnJheVBhcnNlci5yZWFkRG91YmxlOiBwb3NpdGlvbiBjYW5ub3QgYmUgbGVzcyB0aGFuIDBcIjtpZih0Kzg+ZS5sZW5ndGgpdGhyb3dcImJpZ0VuZGlhbkJ5dGVBcnJheVBhcnNlci5yZWFkRG91YmxlOiBhdHRlbXB0IHRvIHJlYWQgcGFzdCBlbmQgb2YgYnVmZmVyXCI7dmFyIHI9bmV3IFVpbnQ4QXJyYXkoOCk7cmV0dXJuIHJbN109ZVt0XSxyWzZdPWVbdCsxXSxyWzVdPWVbdCsyXSxyWzRdPWVbdCszXSxyWzNdPWVbdCs0XSxyWzJdPWVbdCs1XSxyWzFdPWVbdCs2XSxyWzBdPWVbdCs3XSxuZXcgRmxvYXQ2NEFycmF5KHIuYnVmZmVyKVswXX19O2Z1bmN0aW9uIGooZSx0LHIpe2lmKFwidW5kZWZpbmVkXCIhPXR5cGVvZiBCdWZmZXImJmUgaW5zdGFuY2VvZiBCdWZmZXIpcmV0dXJuIGUuc2xpY2UodCx0K3IpO2lmKGUgaW5zdGFuY2VvZiBVaW50OEFycmF5KXJldHVybiBuZXcgVWludDhBcnJheShlLmJ1ZmZlcixlLmJ5dGVPZmZzZXQrdCxyKTt0aHJvd1wiZGljb21QYXJzZXIuZnJvbTogdW5rbm93biB0eXBlIGZvciBieXRlQXJyYXlcIn1mdW5jdGlvbiBDKGUsdCl7Zm9yKHZhciByPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBhPXRbcl07YS5lbnVtZXJhYmxlPWEuZW51bWVyYWJsZXx8ITEsYS5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gYSYmKGEud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLGEua2V5LGEpfX12YXIgSj1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoZSx0LHIpe2lmKCFmdW5jdGlvbihlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsYSksdm9pZCAwPT09ZSl0aHJvd1wiZGljb21QYXJzZXIuQnl0ZVN0cmVhbTogbWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXIgJ2J5dGVBcnJheVBhcnNlcidcIjtpZih2b2lkIDA9PT10KXRocm93XCJkaWNvbVBhcnNlci5CeXRlU3RyZWFtOiBtaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlciAnYnl0ZUFycmF5J1wiO2lmKHQgaW5zdGFuY2VvZiBVaW50OEFycmF5PT0hMSYmKFwidW5kZWZpbmVkXCI9PXR5cGVvZiBCdWZmZXJ8fHQgaW5zdGFuY2VvZiBCdWZmZXI9PSExKSl0aHJvd1wiZGljb21QYXJzZXIuQnl0ZVN0cmVhbTogcGFyYW1ldGVyIGJ5dGVBcnJheSBpcyBub3Qgb2YgdHlwZSBVaW50OEFycmF5IG9yIEJ1ZmZlclwiO2lmKHI8MCl0aHJvd1wiZGljb21QYXJzZXIuQnl0ZVN0cmVhbTogcGFyYW1ldGVyICdwb3NpdGlvbicgY2Fubm90IGJlIGxlc3MgdGhhbiAwXCI7aWYocj49dC5sZW5ndGgpdGhyb3dcImRpY29tUGFyc2VyLkJ5dGVTdHJlYW06IHBhcmFtZXRlciAncG9zaXRpb24nIGNhbm5vdCBiZSBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gJ2J5dGVBcnJheScgbGVuZ3RoXCI7dGhpcy5ieXRlQXJyYXlQYXJzZXI9ZSx0aGlzLmJ5dGVBcnJheT10LHRoaXMucG9zaXRpb249cnx8MCx0aGlzLndhcm5pbmdzPVtdfXZhciBlLHQscjtyZXR1cm4gZT1hLCh0PVt7a2V5Olwic2Vla1wiLHZhbHVlOmZ1bmN0aW9uKGUpe2lmKHRoaXMucG9zaXRpb24rZTwwKXRocm93XCJkaWNvbVBhcnNlci5CeXRlU3RyZWFtLnByb3RvdHlwZS5zZWVrOiBjYW5ub3Qgc2VlayB0byBwb3NpdGlvbiA8IDBcIjt0aGlzLnBvc2l0aW9uKz1lfX0se2tleTpcInJlYWRCeXRlU3RyZWFtXCIsdmFsdWU6ZnVuY3Rpb24oZSl7aWYodGhpcy5wb3NpdGlvbitlPnRoaXMuYnl0ZUFycmF5Lmxlbmd0aCl0aHJvd1wiZGljb21QYXJzZXIuQnl0ZVN0cmVhbS5wcm90b3R5cGUucmVhZEJ5dGVTdHJlYW06IHJlYWRCeXRlU3RyZWFtIC0gYnVmZmVyIG92ZXJyZWFkXCI7dmFyIHQ9aih0aGlzLmJ5dGVBcnJheSx0aGlzLnBvc2l0aW9uLGUpO3JldHVybiB0aGlzLnBvc2l0aW9uKz1lLG5ldyBhKHRoaXMuYnl0ZUFycmF5UGFyc2VyLHQpfX0se2tleTpcImdldFNpemVcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmJ5dGVBcnJheS5sZW5ndGh9fSx7a2V5OlwicmVhZFVpbnQxNlwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5ieXRlQXJyYXlQYXJzZXIucmVhZFVpbnQxNih0aGlzLmJ5dGVBcnJheSx0aGlzLnBvc2l0aW9uKTtyZXR1cm4gdGhpcy5wb3NpdGlvbis9MixlfX0se2tleTpcInJlYWRVaW50MzJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMuYnl0ZUFycmF5UGFyc2VyLnJlYWRVaW50MzIodGhpcy5ieXRlQXJyYXksdGhpcy5wb3NpdGlvbik7cmV0dXJuIHRoaXMucG9zaXRpb24rPTQsZX19LHtrZXk6XCJyZWFkRml4ZWRTdHJpbmdcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD1iKHRoaXMuYnl0ZUFycmF5LHRoaXMucG9zaXRpb24sZSk7cmV0dXJuIHRoaXMucG9zaXRpb24rPWUsdH19XSkmJkMoZS5wcm90b3R5cGUsdCksciYmQyhlLHIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwicHJvdG90eXBlXCIse3dyaXRhYmxlOiExfSksYX0oKSxNPXtyZWFkVWludDE2OmZ1bmN0aW9uKGUsdCl7aWYodDwwKXRocm93XCJsaXR0bGVFbmRpYW5CeXRlQXJyYXlQYXJzZXIucmVhZFVpbnQxNjogcG9zaXRpb24gY2Fubm90IGJlIGxlc3MgdGhhbiAwXCI7aWYodCsyPmUubGVuZ3RoKXRocm93XCJsaXR0bGVFbmRpYW5CeXRlQXJyYXlQYXJzZXIucmVhZFVpbnQxNjogYXR0ZW1wdCB0byByZWFkIHBhc3QgZW5kIG9mIGJ1ZmZlclwiO3JldHVybiBlW3RdKzI1NiplW3QrMV19LHJlYWRJbnQxNjpmdW5jdGlvbihlLHQpe2lmKHQ8MCl0aHJvd1wibGl0dGxlRW5kaWFuQnl0ZUFycmF5UGFyc2VyLnJlYWRJbnQxNjogcG9zaXRpb24gY2Fubm90IGJlIGxlc3MgdGhhbiAwXCI7aWYodCsyPmUubGVuZ3RoKXRocm93XCJsaXR0bGVFbmRpYW5CeXRlQXJyYXlQYXJzZXIucmVhZEludDE2OiBhdHRlbXB0IHRvIHJlYWQgcGFzdCBlbmQgb2YgYnVmZmVyXCI7dD1lW3RdKyhlW3QrMV08PDgpO3JldHVybiB0PTMyNzY4JnQ/dC02NTUzNS0xOnR9LHJlYWRVaW50MzI6ZnVuY3Rpb24oZSx0KXtpZih0PDApdGhyb3dcImxpdHRsZUVuZGlhbkJ5dGVBcnJheVBhcnNlci5yZWFkVWludDMyOiBwb3NpdGlvbiBjYW5ub3QgYmUgbGVzcyB0aGFuIDBcIjtpZih0KzQ+ZS5sZW5ndGgpdGhyb3dcImxpdHRsZUVuZGlhbkJ5dGVBcnJheVBhcnNlci5yZWFkVWludDMyOiBhdHRlbXB0IHRvIHJlYWQgcGFzdCBlbmQgb2YgYnVmZmVyXCI7cmV0dXJuIGVbdF0rMjU2KmVbdCsxXSsyNTYqZVt0KzJdKjI1NisyNTYqZVt0KzNdKjI1NioyNTZ9LHJlYWRJbnQzMjpmdW5jdGlvbihlLHQpe2lmKHQ8MCl0aHJvd1wibGl0dGxlRW5kaWFuQnl0ZUFycmF5UGFyc2VyLnJlYWRJbnQzMjogcG9zaXRpb24gY2Fubm90IGJlIGxlc3MgdGhhbiAwXCI7aWYodCs0PmUubGVuZ3RoKXRocm93XCJsaXR0bGVFbmRpYW5CeXRlQXJyYXlQYXJzZXIucmVhZEludDMyOiBhdHRlbXB0IHRvIHJlYWQgcGFzdCBlbmQgb2YgYnVmZmVyXCI7cmV0dXJuIGVbdF0rKGVbdCsxXTw8OCkrKGVbdCsyXTw8MTYpKyhlW3QrM108PDI0KX0scmVhZEZsb2F0OmZ1bmN0aW9uKGUsdCl7aWYodDwwKXRocm93XCJsaXR0bGVFbmRpYW5CeXRlQXJyYXlQYXJzZXIucmVhZEZsb2F0OiBwb3NpdGlvbiBjYW5ub3QgYmUgbGVzcyB0aGFuIDBcIjtpZih0KzQ+ZS5sZW5ndGgpdGhyb3dcImxpdHRsZUVuZGlhbkJ5dGVBcnJheVBhcnNlci5yZWFkRmxvYXQ6IGF0dGVtcHQgdG8gcmVhZCBwYXN0IGVuZCBvZiBidWZmZXJcIjt2YXIgcj1uZXcgVWludDhBcnJheSg0KTtyZXR1cm4gclswXT1lW3RdLHJbMV09ZVt0KzFdLHJbMl09ZVt0KzJdLHJbM109ZVt0KzNdLG5ldyBGbG9hdDMyQXJyYXkoci5idWZmZXIpWzBdfSxyZWFkRG91YmxlOmZ1bmN0aW9uKGUsdCl7aWYodDwwKXRocm93XCJsaXR0bGVFbmRpYW5CeXRlQXJyYXlQYXJzZXIucmVhZERvdWJsZTogcG9zaXRpb24gY2Fubm90IGJlIGxlc3MgdGhhbiAwXCI7aWYodCs4PmUubGVuZ3RoKXRocm93XCJsaXR0bGVFbmRpYW5CeXRlQXJyYXlQYXJzZXIucmVhZERvdWJsZTogYXR0ZW1wdCB0byByZWFkIHBhc3QgZW5kIG9mIGJ1ZmZlclwiO3ZhciByPW5ldyBVaW50OEFycmF5KDgpO3JldHVybiByWzBdPWVbdF0sclsxXT1lW3QrMV0sclsyXT1lW3QrMl0sclszXT1lW3QrM10scls0XT1lW3QrNF0scls1XT1lW3QrNV0scls2XT1lW3QrNl0scls3XT1lW3QrN10sbmV3IEZsb2F0NjRBcnJheShyLmJ1ZmZlcilbMF19fTtmdW5jdGlvbiBHKGUpe3ZhciBpPTE8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTp7fTtpZih2b2lkIDA9PT1lKXRocm93XCJkaWNvbVBhcnNlci5yZWFkUGFydDEwSGVhZGVyOiBtaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlciAnYnl0ZUFycmF5J1wiO3ZhciBvPWkuVHJhbnNmZXJTeW50YXhVSUQscz1uZXcgSihNLGUpO3JldHVybiBmdW5jdGlvbigpe3ZhciBlPWZ1bmN0aW9uKCl7aWYocy5nZXRTaXplKCk8PTEzMiYmbylyZXR1cm4hMTtpZihzLnNlZWsoMTI4KSxcIkRJQ01cIj09PXMucmVhZEZpeGVkU3RyaW5nKDQpKXJldHVybiEwO2lmKCEoaXx8e30pLlRyYW5zZmVyU3ludGF4VUlEKXRocm93XCJkaWNvbVBhcnNlci5yZWFkUGFydDEwSGVhZGVyOiBESUNNIHByZWZpeCBub3QgZm91bmQgYXQgbG9jYXRpb24gMTMyIC0gdGhpcyBpcyBub3QgYSB2YWxpZCBESUNPTSBQMTAgZmlsZS5cIjtyZXR1cm4gcy5zZWVrKDApLCExfSgpLHQ9W10scj17fTtpZighZSlyZXR1cm4gcy5wb3NpdGlvbj0wLHtlbGVtZW50czp7eDAwMDIwMDEwOnt0YWc6XCJ4MDAwMjAwMTBcIix2cjpcIlVJXCIsVmFsdWU6b319LHdhcm5pbmdzOnR9O2Zvcig7cy5wb3NpdGlvbjxzLmJ5dGVBcnJheS5sZW5ndGg7KXt2YXIgYT1zLnBvc2l0aW9uLG49QihzLHQpO2lmKFwieDAwMDJmZmZmXCI8bi50YWcpe3MucG9zaXRpb249YTticmVha31uLnBhcnNlcj1NLHJbbi50YWddPW59cmV0dXJuKGU9bmV3IHcocy5ieXRlQXJyYXlQYXJzZXIscy5ieXRlQXJyYXkscikpLndhcm5pbmdzPXMud2FybmluZ3MsZS5wb3NpdGlvbj1zLnBvc2l0aW9uLGV9KCl9dmFyIHo9XCIxLjIuODQwLjEwMDA4LjEuMi4yXCI7ZnVuY3Rpb24gVihpKXt2YXIgbz0xPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e307aWYodm9pZCAwPT09aSl0aHJvdyBuZXcgRXJyb3IoXCJkaWNvbVBhcnNlci5wYXJzZURpY29tOiBtaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlciAnYnl0ZUFycmF5J1wiKTt2YXIgZSxhPWZ1bmN0aW9uKGUpe2lmKHZvaWQgMD09PWUuZWxlbWVudHMueDAwMDIwMDEwKXRocm93IG5ldyBFcnJvcihcImRpY29tUGFyc2VyLnBhcnNlRGljb206IG1pc3NpbmcgcmVxdWlyZWQgbWV0YSBoZWFkZXIgYXR0cmlidXRlIDAwMDIsMDAxMFwiKTtlPWUuZWxlbWVudHMueDAwMDIwMDEwO3JldHVybiBlJiZlLlZhbHVlfHxiKGksZS5kYXRhT2Zmc2V0LGUubGVuZ3RoKX07ZnVuY3Rpb24gdCh0KXt2YXIgZT1hKHQpLHI9XCIxLjIuODQwLjEwMDA4LjEuMlwiIT09ZSxlPWZ1bmN0aW9uKGUsdCl7dmFyIHI9XCJbb2JqZWN0IHByb2Nlc3NdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHByb2Nlc3M/cHJvY2VzczowKTtpZihcIjEuMi44NDAuMTAwMDguMS4yLjEuOTlcIiE9PWUpcmV0dXJuIG5ldyBKKGU9PT16P046TSxpLHQpO2lmKG8mJm8uaW5mbGF0ZXIpe2U9by5pbmZsYXRlcihpLHQpO3JldHVybiBuZXcgSihNLGUsMCl9aWYoITA9PXIpe3ZhciBhPXMoMCksbj1qKGksdCxpLmxlbmd0aC10KSxhPWEuaW5mbGF0ZVJhd1N5bmMobiksbj1rKGksYS5sZW5ndGgrdCk7cmV0dXJuIGkuY29weShuLDAsMCx0KSxhLmNvcHkobix0KSxuZXcgSihNLG4sMCl9aWYoXCJ1bmRlZmluZWRcIj09dHlwZW9mIHBha28pdGhyb3dcImRpY29tUGFyc2VyLnBhcnNlRGljb206IG5vIGluZmxhdGVyIGF2YWlsYWJsZSB0byBoYW5kbGUgZGVmbGF0ZSB0cmFuc2ZlciBzeW50YXhcIjtyZXR1cm4gYT1pLnNsaWNlKHQpLG49cGFrby5pbmZsYXRlUmF3KGEpLChhPWsoaSxuLmxlbmd0aCt0KSkuc2V0KGkuc2xpY2UoMCx0KSwwKSxhLnNldChuLHQpLG5ldyBKKE0sYSwwKX0oZSx0LnBvc2l0aW9uKSx0PW5ldyB3KGUuYnl0ZUFycmF5UGFyc2VyLGUuYnl0ZUFycmF5LHt9KTt0Lndhcm5pbmdzPWUud2FybmluZ3M7dHJ5eyhyP3E6VCkodCxlLGUuYnl0ZUFycmF5Lmxlbmd0aCxvKX1jYXRjaChlKXt0aHJvd3tleGNlcHRpb246ZSxkYXRhU2V0OnR9fXJldHVybiB0fXJldHVybiBmdW5jdGlvbihlLHQpe2Zvcih2YXIgciBpbiBlLmVsZW1lbnRzKWUuZWxlbWVudHMuaGFzT3duUHJvcGVydHkocikmJih0LmVsZW1lbnRzW3JdPWUuZWxlbWVudHNbcl0pO3JldHVybiB2b2lkIDAhPT1lLndhcm5pbmdzJiYodC53YXJuaW5ncz1lLndhcm5pbmdzLmNvbmNhdCh0Lndhcm5pbmdzKSksdH0oZT1HKGksbyksdChlKSl9dmFyIFI9ZnVuY3Rpb24oZSx0LHIpe2Zvcih2YXIgYT0wLG49dDtuPHQrcjtuKyspYSs9ZVtuXS5sZW5ndGg7cmV0dXJuIGF9O2Z1bmN0aW9uIF8oZSx0LHIsYSxuKXtpZihuPW58fHQuZnJhZ21lbnRzLHZvaWQgMD09PWUpdGhyb3dcImRpY29tUGFyc2VyLnJlYWRFbmNhcHN1bGF0ZWRQaXhlbERhdGFGcm9tRnJhZ21lbnRzOiBtaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlciAnZGF0YVNldCdcIjtpZih2b2lkIDA9PT10KXRocm93XCJkaWNvbVBhcnNlci5yZWFkRW5jYXBzdWxhdGVkUGl4ZWxEYXRhRnJvbUZyYWdtZW50czogbWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXIgJ3BpeGVsRGF0YUVsZW1lbnQnXCI7aWYodm9pZCAwPT09cil0aHJvd1wiZGljb21QYXJzZXIucmVhZEVuY2Fwc3VsYXRlZFBpeGVsRGF0YUZyb21GcmFnbWVudHM6IG1pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyICdzdGFydEZyYWdtZW50SW5kZXgnXCI7aWYodm9pZCAwPT09KGE9YXx8MSkpdGhyb3dcImRpY29tUGFyc2VyLnJlYWRFbmNhcHN1bGF0ZWRQaXhlbERhdGFGcm9tRnJhZ21lbnRzOiBtaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlciAnbnVtRnJhZ21lbnRzJ1wiO2lmKFwieDdmZTAwMDEwXCIhPT10LnRhZyl0aHJvd1wiZGljb21QYXJzZXIucmVhZEVuY2Fwc3VsYXRlZFBpeGVsRGF0YUZyb21GcmFnbWVudHM6IHBhcmFtZXRlciAncGl4ZWxEYXRhRWxlbWVudCcgcmVmZXJzIHRvIG5vbiBwaXhlbCBkYXRhIHRhZyAoZXhwZWN0ZWQgdGFnID0geDdmZTAwMDEwXCI7aWYoITAhPT10LmVuY2Fwc3VsYXRlZFBpeGVsRGF0YSl0aHJvd1wiZGljb21QYXJzZXIucmVhZEVuY2Fwc3VsYXRlZFBpeGVsRGF0YUZyb21GcmFnbWVudHM6IHBhcmFtZXRlciAncGl4ZWxEYXRhRWxlbWVudCcgcmVmZXJzIHRvIHBpeGVsIGRhdGEgZWxlbWVudCB0aGF0IGRvZXMgbm90IGhhdmUgZW5jYXBzdWxhdGVkIHBpeGVsIGRhdGFcIjtpZighMCE9PXQuaGFkVW5kZWZpbmVkTGVuZ3RoKXRocm93XCJkaWNvbVBhcnNlci5yZWFkRW5jYXBzdWxhdGVkUGl4ZWxEYXRhRnJvbUZyYWdtZW50czogcGFyYW1ldGVyICdwaXhlbERhdGFFbGVtZW50JyByZWZlcnMgdG8gcGl4ZWwgZGF0YSBlbGVtZW50IHRoYXQgZG9lcyBub3QgaGF2ZSBlbmNhcHN1bGF0ZWQgcGl4ZWwgZGF0YVwiO2lmKHZvaWQgMD09PXQuYmFzaWNPZmZzZXRUYWJsZSl0aHJvd1wiZGljb21QYXJzZXIucmVhZEVuY2Fwc3VsYXRlZFBpeGVsRGF0YUZyb21GcmFnbWVudHM6IHBhcmFtZXRlciAncGl4ZWxEYXRhRWxlbWVudCcgcmVmZXJzIHRvIHBpeGVsIGRhdGEgZWxlbWVudCB0aGF0IGRvZXMgbm90IGhhdmUgZW5jYXBzdWxhdGVkIHBpeGVsIGRhdGFcIjtpZih2b2lkIDA9PT10LmZyYWdtZW50cyl0aHJvd1wiZGljb21QYXJzZXIucmVhZEVuY2Fwc3VsYXRlZFBpeGVsRGF0YUZyb21GcmFnbWVudHM6IHBhcmFtZXRlciAncGl4ZWxEYXRhRWxlbWVudCcgcmVmZXJzIHRvIHBpeGVsIGRhdGEgZWxlbWVudCB0aGF0IGRvZXMgbm90IGhhdmUgZW5jYXBzdWxhdGVkIHBpeGVsIGRhdGFcIjtpZih0LmZyYWdtZW50cy5sZW5ndGg8PTApdGhyb3dcImRpY29tUGFyc2VyLnJlYWRFbmNhcHN1bGF0ZWRQaXhlbERhdGFGcm9tRnJhZ21lbnRzOiBwYXJhbWV0ZXIgJ3BpeGVsRGF0YUVsZW1lbnQnIHJlZmVycyB0byBwaXhlbCBkYXRhIGVsZW1lbnQgdGhhdCBkb2VzIG5vdCBoYXZlIGVuY2Fwc3VsYXRlZCBwaXhlbCBkYXRhXCI7aWYocjwwKXRocm93XCJkaWNvbVBhcnNlci5yZWFkRW5jYXBzdWxhdGVkUGl4ZWxEYXRhRnJvbUZyYWdtZW50czogcGFyYW1ldGVyICdzdGFydEZyYWdtZW50SW5kZXgnIG11c3QgYmUgPj0gMFwiO2lmKHI+PXQuZnJhZ21lbnRzLmxlbmd0aCl0aHJvd1wiZGljb21QYXJzZXIucmVhZEVuY2Fwc3VsYXRlZFBpeGVsRGF0YUZyb21GcmFnbWVudHM6IHBhcmFtZXRlciAnc3RhcnRGcmFnbWVudEluZGV4JyBtdXN0IGJlIDwgbnVtYmVyIG9mIGZyYWdtZW50c1wiO2lmKGE8MSl0aHJvd1wiZGljb21QYXJzZXIucmVhZEVuY2Fwc3VsYXRlZFBpeGVsRGF0YUZyb21GcmFnbWVudHM6IHBhcmFtZXRlciAnbnVtRnJhZ21lbnRzJyBtdXN0IGJlID4gMFwiO2lmKHIrYT50LmZyYWdtZW50cy5sZW5ndGgpdGhyb3dcImRpY29tUGFyc2VyLnJlYWRFbmNhcHN1bGF0ZWRQaXhlbERhdGFGcm9tRnJhZ21lbnRzOiBwYXJhbWV0ZXIgJ3N0YXJ0RnJhZ21lbnQnICsgJ251bUZyYWdtZW50cycgPCBudW1iZXIgb2YgZnJhZ21lbnRzXCI7dmFyIGk9bmV3IEooZS5ieXRlQXJyYXlQYXJzZXIsZS5ieXRlQXJyYXksdC5kYXRhT2Zmc2V0KSx0PVMoaSk7aWYoXCJ4ZmZmZWUwMDBcIiE9PXQudGFnKXRocm93XCJkaWNvbVBhcnNlci5yZWFkRW5jYXBzdWxhdGVkUGl4ZWxEYXRhOiBtaXNzaW5nIGJhc2ljIG9mZnNldCB0YWJsZSB4ZmZmZWUwMDBcIjtpLnNlZWsodC5sZW5ndGgpO3ZhciBvPWkucG9zaXRpb247aWYoMT09PWEpcmV0dXJuIGooaS5ieXRlQXJyYXksbytuW3JdLm9mZnNldCs4LG5bcl0ubGVuZ3RoKTtmb3IodmFyIHQ9UihuLHIsYSkscz1rKGkuYnl0ZUFycmF5LHQpLGQ9MCxmPXI7ZjxyK2E7ZisrKWZvcih2YXIgbD1vK25bZl0ub2Zmc2V0KzgsdT0wO3U8bltmXS5sZW5ndGg7dSsrKXNbZCsrXT1pLmJ5dGVBcnJheVtsKytdO3JldHVybiBzfXZhciBIPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciByPTA7cjxlLmxlbmd0aDtyKyspaWYoZVtyXS5vZmZzZXQ9PT10KXJldHVybiByfSxRPWZ1bmN0aW9uKGUsdCxyLGEpe2lmKGU9PT10Lmxlbmd0aC0xKXJldHVybiByLmxlbmd0aC1hO2Zvcih2YXIgbj10W2UrMV0saT1hKzE7aTxyLmxlbmd0aDtpKyspaWYocltpXS5vZmZzZXQ9PT1uKXJldHVybiBpLWE7dGhyb3dcImRpY29tUGFyc2VyLmNhbGN1bGF0ZU51bWJlck9mRnJhZ21lbnRzRm9yRnJhbWU6IGNvdWxkIG5vdCBmaW5kIGZyYWdtZW50IHdpdGggb2Zmc2V0IG1hdGNoaW5nIGJhc2ljIG9mZnNldCB0YWJsZVwifTtmdW5jdGlvbiBXKGUsdCxyLGEsbil7aWYoYT1hfHx0LmJhc2ljT2Zmc2V0VGFibGUsbj1ufHx0LmZyYWdtZW50cyx2b2lkIDA9PT1lKXRocm93XCJkaWNvbVBhcnNlci5yZWFkRW5jYXBzdWxhdGVkSW1hZ2VGcmFtZTogbWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXIgJ2RhdGFTZXQnXCI7aWYodm9pZCAwPT09dCl0aHJvd1wiZGljb21QYXJzZXIucmVhZEVuY2Fwc3VsYXRlZEltYWdlRnJhbWU6IG1pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyICdwaXhlbERhdGFFbGVtZW50J1wiO2lmKHZvaWQgMD09PXIpdGhyb3dcImRpY29tUGFyc2VyLnJlYWRFbmNhcHN1bGF0ZWRJbWFnZUZyYW1lOiBtaXNzaW5nIHJlcXVpcmVkIHBhcmFtZXRlciAnZnJhbWVJbmRleCdcIjtpZih2b2lkIDA9PT1hKXRocm93XCJkaWNvbVBhcnNlci5yZWFkRW5jYXBzdWxhdGVkSW1hZ2VGcmFtZTogcGFyYW1ldGVyICdwaXhlbERhdGFFbGVtZW50JyBkb2VzIG5vdCBoYXZlIGJhc2ljT2Zmc2V0VGFibGVcIjtpZihcIng3ZmUwMDAxMFwiIT09dC50YWcpdGhyb3dcImRpY29tUGFyc2VyLnJlYWRFbmNhcHN1bGF0ZWRJbWFnZUZyYW1lOiBwYXJhbWV0ZXIgJ3BpeGVsRGF0YUVsZW1lbnQnIHJlZmVycyB0byBub24gcGl4ZWwgZGF0YSB0YWcgKGV4cGVjdGVkIHRhZyA9IHg3ZmUwMDAxMClcIjtpZighMCE9PXQuZW5jYXBzdWxhdGVkUGl4ZWxEYXRhKXRocm93XCJkaWNvbVBhcnNlci5yZWFkRW5jYXBzdWxhdGVkSW1hZ2VGcmFtZTogcGFyYW1ldGVyICdwaXhlbERhdGFFbGVtZW50JyByZWZlcnMgdG8gcGl4ZWwgZGF0YSBlbGVtZW50IHRoYXQgZG9lcyBub3QgaGF2ZSBlbmNhcHN1bGF0ZWQgcGl4ZWwgZGF0YVwiO2lmKCEwIT09dC5oYWRVbmRlZmluZWRMZW5ndGgpdGhyb3dcImRpY29tUGFyc2VyLnJlYWRFbmNhcHN1bGF0ZWRJbWFnZUZyYW1lOiBwYXJhbWV0ZXIgJ3BpeGVsRGF0YUVsZW1lbnQnIHJlZmVycyB0byBwaXhlbCBkYXRhIGVsZW1lbnQgdGhhdCBkb2VzIG5vdCBoYXZlIHVuZGVmaW5lZCBsZW5ndGhcIjtpZih2b2lkIDA9PT10LmZyYWdtZW50cyl0aHJvd1wiZGljb21QYXJzZXIucmVhZEVuY2Fwc3VsYXRlZEltYWdlRnJhbWU6IHBhcmFtZXRlciAncGl4ZWxEYXRhRWxlbWVudCcgcmVmZXJzIHRvIHBpeGVsIGRhdGEgZWxlbWVudCB0aGF0IGRvZXMgbm90IGhhdmUgZnJhZ21lbnRzXCI7aWYoMD09PWEubGVuZ3RoKXRocm93XCJkaWNvbVBhcnNlci5yZWFkRW5jYXBzdWxhdGVkSW1hZ2VGcmFtZTogYmFzaWNPZmZzZXRUYWJsZSBoYXMgemVybyBlbnRyaWVzXCI7aWYocjwwKXRocm93XCJkaWNvbVBhcnNlci5yZWFkRW5jYXBzdWxhdGVkSW1hZ2VGcmFtZTogcGFyYW1ldGVyICdmcmFtZUluZGV4JyBtdXN0IGJlID49IDBcIjtpZihyPj1hLmxlbmd0aCl0aHJvd1wiZGljb21QYXJzZXIucmVhZEVuY2Fwc3VsYXRlZEltYWdlRnJhbWU6IHBhcmFtZXRlciAnZnJhbWVJbmRleCcgbXVzdCBiZSA8IGJhc2ljT2Zmc2V0VGFibGUubGVuZ3RoXCI7dmFyIGk9YVtyXSxpPUgobixpKTtpZih2b2lkIDA9PT1pKXRocm93XCJkaWNvbVBhcnNlci5yZWFkRW5jYXBzdWxhdGVkSW1hZ2VGcmFtZTogdW5hYmxlIHRvIGZpbmQgZnJhZ21lbnQgdGhhdCBtYXRjaGVzIGJhc2ljIG9mZnNldCB0YWJsZSBlbnRyeVwiO3JldHVybiBfKGUsdCxpLFEocixhLG4saSksbil9dmFyICQ9ITE7ZnVuY3Rpb24gSyhlLHQscil7aWYoJHx8KCQ9ITAsY29uc29sZSYmY29uc29sZS5sb2cmJmNvbnNvbGUubG9nKFwiV0FSTklORzogZGljb21QYXJzZXIucmVhZEVuY2Fwc3VsYXRlZFBpeGVsRGF0YSgpIGhhcyBiZWVuIGRlcHJlY2F0ZWRcIikpLHZvaWQgMD09PWUpdGhyb3dcImRpY29tUGFyc2VyLnJlYWRFbmNhcHN1bGF0ZWRQaXhlbERhdGE6IG1pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyICdkYXRhU2V0J1wiO2lmKHZvaWQgMD09PXQpdGhyb3dcImRpY29tUGFyc2VyLnJlYWRFbmNhcHN1bGF0ZWRQaXhlbERhdGE6IG1pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyICdlbGVtZW50J1wiO2lmKHZvaWQgMD09PXIpdGhyb3dcImRpY29tUGFyc2VyLnJlYWRFbmNhcHN1bGF0ZWRQaXhlbERhdGE6IG1pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyICdmcmFtZSdcIjtpZihcIng3ZmUwMDAxMFwiIT09dC50YWcpdGhyb3dcImRpY29tUGFyc2VyLnJlYWRFbmNhcHN1bGF0ZWRQaXhlbERhdGE6IHBhcmFtZXRlciAnZWxlbWVudCcgcmVmZXJzIHRvIG5vbiBwaXhlbCBkYXRhIHRhZyAoZXhwZWN0ZWQgdGFnID0geDdmZTAwMDEwKVwiO2lmKCEwIT09dC5lbmNhcHN1bGF0ZWRQaXhlbERhdGEpdGhyb3dcImRpY29tUGFyc2VyLnJlYWRFbmNhcHN1bGF0ZWRQaXhlbERhdGE6IHBhcmFtZXRlciAnZWxlbWVudCcgcmVmZXJzIHRvIHBpeGVsIGRhdGEgZWxlbWVudCB0aGF0IGRvZXMgbm90IGhhdmUgZW5jYXBzdWxhdGVkIHBpeGVsIGRhdGFcIjtpZighMCE9PXQuaGFkVW5kZWZpbmVkTGVuZ3RoKXRocm93XCJkaWNvbVBhcnNlci5yZWFkRW5jYXBzdWxhdGVkUGl4ZWxEYXRhOiBwYXJhbWV0ZXIgJ2VsZW1lbnQnIHJlZmVycyB0byBwaXhlbCBkYXRhIGVsZW1lbnQgdGhhdCBkb2VzIG5vdCBoYXZlIGVuY2Fwc3VsYXRlZCBwaXhlbCBkYXRhXCI7aWYodm9pZCAwPT09dC5iYXNpY09mZnNldFRhYmxlKXRocm93XCJkaWNvbVBhcnNlci5yZWFkRW5jYXBzdWxhdGVkUGl4ZWxEYXRhOiBwYXJhbWV0ZXIgJ2VsZW1lbnQnIHJlZmVycyB0byBwaXhlbCBkYXRhIGVsZW1lbnQgdGhhdCBkb2VzIG5vdCBoYXZlIGVuY2Fwc3VsYXRlZCBwaXhlbCBkYXRhXCI7aWYodm9pZCAwPT09dC5mcmFnbWVudHMpdGhyb3dcImRpY29tUGFyc2VyLnJlYWRFbmNhcHN1bGF0ZWRQaXhlbERhdGE6IHBhcmFtZXRlciAnZWxlbWVudCcgcmVmZXJzIHRvIHBpeGVsIGRhdGEgZWxlbWVudCB0aGF0IGRvZXMgbm90IGhhdmUgZW5jYXBzdWxhdGVkIHBpeGVsIGRhdGFcIjtpZihyPDApdGhyb3dcImRpY29tUGFyc2VyLnJlYWRFbmNhcHN1bGF0ZWRQaXhlbERhdGE6IHBhcmFtZXRlciAnZnJhbWUnIG11c3QgYmUgPj0gMFwiO3JldHVybiAwIT09dC5iYXNpY09mZnNldFRhYmxlLmxlbmd0aD9XKGUsdCxyKTpfKGUsdCwwLHQuZnJhZ21lbnRzLmxlbmd0aCl9dC5kZWZhdWx0PXtpc1N0cmluZ1ZyOmQsaXNQcml2YXRlVGFnOmYscGFyc2VQTjphLHBhcnNlVE06bixwYXJzZURBOm8sZXhwbGljaXRFbGVtZW50VG9TdHJpbmc6bCxleHBsaWNpdERhdGFTZXRUb0pTOnUsY3JlYXRlSlBFR0Jhc2ljT2Zmc2V0VGFibGU6cCxwYXJzZURpY29tRGF0YVNldEV4cGxpY2l0OnEscGFyc2VEaWNvbURhdGFTZXRJbXBsaWNpdDpULHJlYWRGaXhlZFN0cmluZzpiLGFsbG9jOmssdmVyc2lvbjpMLGJpZ0VuZGlhbkJ5dGVBcnJheVBhcnNlcjpOLEJ5dGVTdHJlYW06SixzaGFyZWRDb3B5OmosRGF0YVNldDp3LGZpbmRBbmRTZXRVTkVsZW1lbnRMZW5ndGg6eSxmaW5kRW5kT2ZFbmNhcHN1bGF0ZWRFbGVtZW50OmcsZmluZEl0ZW1EZWxpbWl0YXRpb25JdGVtQW5kU2V0RWxlbWVudExlbmd0aDp4LGxpdHRsZUVuZGlhbkJ5dGVBcnJheVBhcnNlcjpNLHBhcnNlRGljb206VixyZWFkRGljb21FbGVtZW50RXhwbGljaXQ6QixyZWFkRGljb21FbGVtZW50SW1wbGljaXQ6QSxyZWFkRW5jYXBzdWxhdGVkSW1hZ2VGcmFtZTpXLHJlYWRFbmNhcHN1bGF0ZWRQaXhlbERhdGE6SyxyZWFkRW5jYXBzdWxhdGVkUGl4ZWxEYXRhRnJvbUZyYWdtZW50czpfLHJlYWRQYXJ0MTBIZWFkZXI6RyxyZWFkU2VxdWVuY2VJdGVtc0V4cGxpY2l0OkkscmVhZFNlcXVlbmNlSXRlbXNJbXBsaWNpdDpGLHJlYWRTZXF1ZW5jZUl0ZW06UyxyZWFkVGFnOmgsTEVJOlwiMS4yLjg0MC4xMDAwOC4xLjJcIixMRUU6XCIxLjIuODQwLjEwMDA4LjEuMi4xXCJ9fV0saT17fSxuLm09YSxuLmM9aSxuLmQ9ZnVuY3Rpb24oZSx0LHIpe24ubyhlLHQpfHxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LHtlbnVtZXJhYmxlOiEwLGdldDpyfSl9LG4ucj1mdW5jdGlvbihlKXtcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wudG9TdHJpbmdUYWcmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFN5bWJvbC50b1N0cmluZ1RhZyx7dmFsdWU6XCJNb2R1bGVcIn0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pfSxuLnQ9ZnVuY3Rpb24odCxlKXtpZigxJmUmJih0PW4odCkpLDgmZSlyZXR1cm4gdDtpZig0JmUmJlwib2JqZWN0XCI9PXR5cGVvZiB0JiZ0JiZ0Ll9fZXNNb2R1bGUpcmV0dXJuIHQ7dmFyIHI9T2JqZWN0LmNyZWF0ZShudWxsKTtpZihuLnIociksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJkZWZhdWx0XCIse2VudW1lcmFibGU6ITAsdmFsdWU6dH0pLDImZSYmXCJzdHJpbmdcIiE9dHlwZW9mIHQpZm9yKHZhciBhIGluIHQpbi5kKHIsYSxmdW5jdGlvbihlKXtyZXR1cm4gdFtlXX0uYmluZChudWxsLGEpKTtyZXR1cm4gcn0sbi5uPWZ1bmN0aW9uKGUpe3ZhciB0PWUmJmUuX19lc01vZHVsZT9mdW5jdGlvbigpe3JldHVybiBlLmRlZmF1bHR9OmZ1bmN0aW9uKCl7cmV0dXJuIGV9O3JldHVybiBuLmQodCxcImFcIix0KSx0fSxuLm89ZnVuY3Rpb24oZSx0KXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsdCl9LG4ucD1cIlwiLG4obi5zPTEpO2Z1bmN0aW9uIG4oZSl7aWYoaVtlXSlyZXR1cm4gaVtlXS5leHBvcnRzO3ZhciB0PWlbZV09e2k6ZSxsOiExLGV4cG9ydHM6e319O3JldHVybiBhW2VdLmNhbGwodC5leHBvcnRzLHQsdC5leHBvcnRzLG4pLHQubD0hMCx0LmV4cG9ydHN9dmFyIGEsaX0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGljb21QYXJzZXIubWluLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/dicom-parser/dist/dicomParser.min.js\n");

/***/ })

};
;